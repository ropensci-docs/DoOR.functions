[{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"content","dir":"Articles","previous_headings":"","what":"Content","title":"The Database of Odor Responses - DoOR functions package","text":"loading DoOR Importing new data import_new_data() Building complete data base create_door_database() Updating parts data base update_door_database() model_response() model_response_seq() Removing study remove_study() Updating odor information update_door_odorinfo() Helper functions","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"loading","dir":"Articles","previous_headings":"","what":"Loading DoOR","title":"The Database of Odor Responses - DoOR functions package","text":"first step starting R attach packages load response data: load_door_data() attaches data DoOR.data.","code":"library(DoOR.data) ##  ## Welcome to DoOR.data ## Version: 2.0.1 ## Released: 2017-03-07 ##  ## Please use load_door_data() to load all data into your workspace now. library(DoOR.functions) ##  ## Welcome to DoOR.functions ## Version: 2.0.2 ## Released:  ##  ## Please note that all function names have been changed to 'snake_case' ##        for consistency. ##        ## Old  'camelCase' function names will stop working in one of the next ##        versions. load_door_data(nointeraction = TRUE)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"building","dir":"Articles","previous_headings":"","what":"Modifying, building and updating DoOR","title":"The Database of Odor Responses - DoOR functions package","text":"DoOR comes original data sets well pre-computed version consensus matrix door_response_matrix data integrated using DoOR merging algorithms (see paper details algorithm works). values door_response_matrix globally normalized values scaled [0,1]. door_response_matrix_non_normalized version consensus data globally normalized meaning responses scaled [0,1] within responding unit (receptor, sensory neuron, glomerulus…).","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"importing-new-data-with-import_new_data","dir":"Articles","previous_headings":"Modifying, building and updating DoOR","what":"Importing new data with import_new_data()","title":"The Database of Odor Responses - DoOR functions package","text":"easy add new response data DoOR, take care provide right format: either .csv .txt file fields separated colons tabs (see ?read.table detailed specifications). * filename corresponds later name data set * add e.g. recordings obtained different methods, go two data sets thus two different files import * e.g. “Hallem.2004.EN” “Hallem.2004.WT” “empty neuron” “wildtype neuron” recordings Elissa Hallem’s 2004 publication * file needs least two columns: 1. one column named “InChIKey” holding InChIKey odorant 1. one column named responding unit recording comes (e.g. “Or22a”) minimal example file look like : can provide chemical identifiers: following imported: Class e.g. “ester” chemical class odorant belongs Name e.g. “isopentyl acetate” InChIKey e.g. “MLFHJEHSLIIPHL-UHFFFAOYSA-N” (details) InChI e.g. “InChI=1S/C7H14O2/c1-6(2)4-5-9-7(3)8/h6H,4-5H2,1-3H3” (details) CAS e.g. “123-92-2” (details) CID e.g. “31276” (details) SMILES e.g. “C(C(C)C)COC(=O)C” (details) See ?import_new_data details. can e.g. import data also based CAS CID instead InChIKey.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"looking-up-inchikeys-if-you-do-not-know-the-inchikeys-of-the-odorants-in","dir":"Articles","previous_headings":"Modifying, building and updating DoOR > Importing new data with import_new_data()","what":"Looking up InChIKeys If you do not know the InChIKeys of the odorants in","title":"The Database of Odor Responses - DoOR functions package","text":"data set, recommend using webchem package automated lookup manually via http://cactus.nci.nih.gov/chemical/structure chemical lookup service.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"building-the-complete-data-base-with","dir":"Articles","previous_headings":"Modifying, building and updating DoOR","what":"Building the complete data base with","title":"The Database of Odor Responses - DoOR functions package","text":"create_door_database() imported new data can use create_door_database() order rebuild response matrices. merge process data sets might excluded either overlap studies low fit studies bad; studies recorded door_excluded_data.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"updating-parts-of-the-data-base-with","dir":"Articles","previous_headings":"Modifying, building and updating DoOR","what":"Updating parts of the data base with","title":"The Database of Odor Responses - DoOR functions package","text":"update_door_database() imported new data receptors, can update data base update_door_database(). two ways update data base:","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"using-the-heuristic-approach-this-is-the-faster-way-to-perform-a-merge-of","dir":"Articles","previous_headings":"Modifying, building and updating DoOR > Updating parts of the data base with","what":"Using the heuristic approach This is the faster way to perform a merge of","title":"The Database of Odor Responses - DoOR functions package","text":"data sets. possible binary combinations data sets merged using 10 different fitting functions odorants measured data sets. two data sets yielding “best merge” (.e. lowest mean deviations points fitted function) merged. process pairwise merges repeated “merged_data” remaining data sets included:","code":"update_door_database(\"Or92a\", permutation = FALSE, plot = TRUE) ## Not all datasets could be merged because they did not reach the ##                  criterion. ## door_response_matrix_non_normalized has been updated for Or92a ## door_response_matrix has been updated for Or92a ## door_excluded_data has been updated for Or92a"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"trying-all-permutations-the-more-exhaustive-way-to-update-the-data-base-is","dir":"Articles","previous_headings":"Modifying, building and updating DoOR > Updating parts of the data base with","what":"Trying all permutations The more exhaustive way to update the data base is","title":"The Database of Odor Responses - DoOR functions package","text":"test possible sequences data set merges, calculating mean deviations original data sets selecting merge produces lowest mean deviations. approach works well responding units contain low number recorded data sets. responding units containing 5 data sets calculate merges 120 different sequences. 6 already 720 sequences 10 data sets test > 3.6 million different sequences. can done via parallel computing, nothing try home PC. pre-computed response matrices performed matches using permutation approach responding units contained maximum 10 different data sets computing cluster. DoOR 2.0 responding units except Or22a.","code":"update_door_database(\"Or67a\", permutation = TRUE, plot = FALSE) ## All possible permutations (6) have been calculated, now merging. ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## [1/6] Hallem.2006.EN, Gabler.2013.AL, Hallem.2004.EN ------ Mean distance: 0.0282 ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## [2/6] Hallem.2006.EN, Hallem.2004.EN, Gabler.2013.AL ------ Mean distance: 0.0251 ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## [3/6] Gabler.2013.AL, Hallem.2006.EN, Hallem.2004.EN ------ Mean distance: 0.0282 ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## [4/6] Gabler.2013.AL, Hallem.2004.EN, Hallem.2006.EN ------ Mean distance: 0.0288 ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## [5/6] Hallem.2004.EN, Hallem.2006.EN, Gabler.2013.AL ------ Mean distance: 0.025 ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## [6/6] Hallem.2004.EN, Gabler.2013.AL, Hallem.2006.EN ------ Mean distance: 0.0287 ## -------------------------------------------------------- ## The optimized sequence with the lowest mean MD 0.025 is: ## Hallem.2004.EN -> Hallem.2006.EN -> Gabler.2013.AL ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 ## door_response_matrix_non_normalized has been updated for Or67a ## door_response_matrix has been updated for Or67a ## door_excluded_data has been updated for Or67a"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"model_response-and-model_response_seq","dir":"Articles","previous_headings":"Modifying, building and updating DoOR","what":"model_response() and model_response_seq()","title":"The Database of Odor Responses - DoOR functions package","text":"update_door_database() createDatabse() call model_response() model_response_seq() perform merges update different DoOR objects. want perform merge can call directly.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"merging-using-the-heuristic-with-model_response-model_response","dir":"Articles","previous_headings":"Modifying, building and updating DoOR > model_response() and model_response_seq()","what":"Merging using the heuristic with model_response() model_response()","title":"The Database of Odor Responses - DoOR functions package","text":"returns list containing merged data, names excluded data sets () names included data sets (excluded).","code":"merge <- model_response(Or67a, plot = FALSE) knitr::kable(head(merge$model.response))"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"merging-in-a-specific-sequence-with-model_response_seq","dir":"Articles","previous_headings":"Modifying, building and updating DoOR > model_response() and model_response_seq()","what":"Merging in a specific sequence with model_response_seq()","title":"The Database of Odor Responses - DoOR functions package","text":"update_door_database() permutation = TRUE calls model_response_seq(). Like model_response() can also call model_response_seq directly:","code":"SEQ <- c(\"Hallem.2006.EN\",\"Kreher.2008.EN\",\"Hallem.2006.EN\") merge <- model_response_seq(Or35a, SEQ = SEQ, plot = TRUE) ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 head(merge) ## [1] 0.09675994         NA 0.09047548 0.07062655 0.12658721         NA"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"removing-a-study-with-remove_study-remove_study-will","dir":"Articles","previous_headings":"Modifying, building and updating DoOR","what":"Removing a study with remove_study() remove_study() will","title":"The Database of Odor Responses - DoOR functions package","text":"remove data set DoOR data objects. import data set already exists import_new_data(), remove_study() automatically run data imported.","code":"remove_study(study = \"Hallem.2004.EN\") ## removed Hallem.2004.EN from Or2a . ## removed Hallem.2004.EN from Or7a . ## removed Hallem.2004.EN from Or9a . ## removed Hallem.2004.EN from Or10a . ## removed Hallem.2004.EN from Or19a . ## removed Hallem.2004.EN from Or22a . ## removed Hallem.2004.EN from Or23a . ## removed Hallem.2004.EN from Or33b . ## removed Hallem.2004.EN from Or35a . ## removed Hallem.2004.EN from Or43a . ## removed Hallem.2004.EN from Or43b . ## removed Hallem.2004.EN from Or47a . ## removed Hallem.2004.EN from Or47b . ## removed Hallem.2004.EN from Or49b . ## removed Hallem.2004.EN from Or59b . ## removed Hallem.2004.EN from Or65a . ## removed Hallem.2004.EN from Or67a . ## removed Hallem.2004.EN from Or67c . ## removed Hallem.2004.EN from Or82a . ## removed Hallem.2004.EN from Or85a . ## removed Hallem.2004.EN from Or85b . ## removed Hallem.2004.EN from Or85f . ## removed Hallem.2004.EN from Or88a . ## removed Hallem.2004.EN from Or98a . ## removed Hallem.2004.EN from 'door_response_range' ## removed Hallem.2004.EN from 'door_global_normalization_weights'"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"updating-the-odor-information-with","dir":"Articles","previous_headings":"Modifying, building and updating DoOR","what":"Updating the odor information with","title":"The Database of Odor Responses - DoOR functions package","text":"update_door_odorinfo() edit general odor information DoOR.data::odor need update DoOR objects new information. update_door_odorinfo() overwrites first 5 columns DoOR responding units data frames (e.g. Or22a), add remove lines!","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"helper","dir":"Articles","previous_headings":"","what":"Helper functions","title":"The Database of Odor Responses - DoOR functions package","text":"several small helper functions belong DoOR.functions.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"trans_id","dir":"Articles","previous_headings":"Helper functions","what":"trans_id()","title":"The Database of Odor Responses - DoOR functions package","text":"Maybe important little function DoOR. trans_id() can translate odorant identifiers, e.g. CAS numbers InChIKeys names. information taken DoOR.data::odor, colnames(odor) can used define input output:","code":"trans_id(\"123-92-2\") ## [1] \"MLFHJEHSLIIPHL-UHFFFAOYSA-N\" trans_id(\"123-92-2\", to = \"Name\") ## [1] \"isopentyl acetate\" trans_id(\"carbon dioxide\", from = \"Name\", to = \"SMILES\") ## [1] \"O=C=O\" odorants <- c(\"carbon dioxide\", \"pentanoic acid\", \"water\", \"benzaldehyde\",                \"isopentyl acetate\") trans_id(odorants, from = \"Name\", to = \"InChI\") ## [1] \"InChI=1S/CO2/c2-1-3\"                                 ## [2] \"InChI=1S/C5H10O2/c1-2-3-4-5(6)7/h2-4H2,1H3,(H,6,7)\"  ## [3] \"InChI=1S/H2O/h1H2\"                                   ## [4] \"InChI=1S/C7H6O/c8-6-7-4-2-1-3-5-7/h1-6H\"             ## [5] \"InChI=1S/C7H14O2/c1-6(2)4-5-9-7(3)8/h6H,4-5H2,1-3H3\""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"reset_sfr-reset_sfr-subtracts-the-values-of-a-specified","dir":"Articles","previous_headings":"Helper functions","what":"reset_sfr() reset_sfr() subtracts the values of a specified","title":"The Database of Odor Responses - DoOR functions package","text":"odorant response vector whole response matrix. usually used subtract spontaneous firing rate odorant, thus setting zero restoring inhibitory responses. treat SFR like normal odorant merging process, thus becomes > 0 negative values exist (data gets rescaled [0,1] merging). reset_sfr() works either whole door_response_matrix, odorant InChIKey specified subtraction. subtracts value response vector.","code":"rm_sfrReset <- reset_sfr(x = door_response_matrix, sfr = \"SFR\") knitr::kable(rm_sfrReset[1:10,6:15], digits = 2) reset_sfr(x = c(1:10), sfr = 4) ##  [1] -3 -2 -1  0  1  2  3  4  5  6"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"door_default_values-door_default_values-returns","dir":"Articles","previous_headings":"Helper functions","what":"door_default_values() door_default_values() returns","title":"The Database of Odor Responses - DoOR functions package","text":"default values several parameters used DoOR functions, e.g. default odor identifier colors used plots.","code":"door_default_values(\"ident\") ## [1] \"InChIKey\" door_default_values(\"colors\") ## [1] \"#0570b0\" \"#74a9cf\" \"#ffffff\" \"#fdcc8a\" \"#fc8d59\" \"#d7301f\""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"get_responses-get_responses-returns-the-response","dir":"Articles","previous_headings":"Helper functions","what":"get_responses() get_responses() returns the response","title":"The Database of Odor Responses - DoOR functions package","text":"values one several odorants across individual data sets.","code":"odorants  <- trans_id(c(\"carbon dioxide\", \"isopentyl acetate\"), from = \"Name\") responses <- get_responses(odorants) responses <- na.omit(responses) knitr::kable(head(responses))"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"get_normalized_responses","dir":"Articles","previous_headings":"Helper functions","what":"get_normalized_responses()","title":"The Database of Odor Responses - DoOR functions package","text":"get_normalized_responses() gathers responses specified odorants door_response_matrix resets SFR via reset_sfr():","code":"odorants  <- trans_id(c(\"carbon dioxide\", \"isopentyl acetate\"), from = \"Name\") responses <- get_normalized_responses(odorants) responses <- na.omit(responses) knitr::kable(head(responses))"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"countstudies-countstudies-counts-the-number-of-studies","dir":"Articles","previous_headings":"Helper functions","what":"countStudies() countStudies() counts the number of studies","title":"The Database of Odor Responses - DoOR functions package","text":"measured given odorant-responding unit combination.","code":"counts <- countStudies() knitr::kable(counts[1:10,6:15])"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR.functions_main.html","id":"export_door_data-export_door_data-exports-all-or","dir":"Articles","previous_headings":"Helper functions","what":"export_door_data() export_door_data() exports all or","title":"The Database of Odor Responses - DoOR functions package","text":"selected DoOR data objects txt csv format.","code":"# export_door_data(\".csv\")                      # export all data as .csv files # export_door_data(\".txt\", all.data = FALSE)    # export odorant responses data                                                # only as .txt files"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"content","dir":"Articles","previous_headings":"","what":"Content","title":"DoOR analysis tools","text":"Loading data Identifying sensillum recording identify_sensillum() Finding neuron-specific odorants private_odorant() Mapping response data unknown source map_receptor() Changing response unit back_project() Quantifying tuning curves sparse()","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"loading","dir":"Articles","previous_headings":"","what":"Loading data","title":"DoOR analysis tools","text":"First need load packages data:","code":"#load data library(DoOR.functions) ## Loading required package: DoOR.data ##  ## Welcome to DoOR.data ## Version: 2.0.1 ## Released: 2017-03-07 ##  ## Please use load_door_data() to load all data into your workspace now. ##  ## Welcome to DoOR.functions ## Version: 2.0.2 ## Released:  ##  ## Please note that all function names have been changed to 'snake_case' ##        for consistency. ##        ## Old  'camelCase' function names will stop working in one of the next ##        versions. library(DoOR.data) load_door_data(nointeraction = TRUE)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"identifying-the-sensillum-we-are-recording-from-with-identify_sensillum","dir":"Articles","previous_headings":"","what":"Identifying the sensillum we are recording from with identify_sensillum()","title":"DoOR analysis tools","text":"{#identify_sensillum} Imagine perform electrophysiological recording Drosophila sensillum (single sensillum recording, SSR) sure sensillum recording . order identify sensillum used several diagnostic odorants (maybe selected using private_odorant()) got responses different sensory neurons sensillum houses. can now pass recorded data identify_sensillum(). Let’s make simple fake data. pretend recorded three odorants (2,3-butanedione, ethanoic acid carbon dioxide) separate responses two units. Unit1 responded strongly 2,3-butanedione , unit2 responded carbon dioxide. create data.frame contains column called odorants InChIKeys test odorants, one column unit (name colnames like, e.g. unit1-n Aneuro sure neuron). Next feed recording function:","code":"recording <- data.frame(   odorants = c(trans_id(c(\"BEDN\", \"ETAS\"), \"Code\"),                trans_id(\"carbon dioxide\", \"Name\")),   unit1 = c(.9,.1,.1),   unit2 = c(0, .1, 1) )"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"using-correlations","dir":"Articles","previous_headings":"Identifying the sensillum we are recording from with identify_sensillum()","what":"using correlations","title":"DoOR analysis tools","text":"Note function tells us found hits units ab1 ab5, meaning e.g. within four neurons housed ab1 sensillum units good matches. can set correlation threshold min.cor. increase threshold 0.99 ab1 returned double match: can define number best hits want get returned (default 10): know e.g. recording basiconic sensillum can restrict search one sensilla types:","code":"identify_sensillum(recording, base_size = 8) ## found correlations above 0.9 for all 2 units in: ab1 identify_sensillum(recording, min.cor = .99) ## found correlations above 0.99 for all 2 units in: ab1 identify_sensillum(recording, nshow = 5, base_size = 8) ## found correlations above 0.9 for all 2 units in: ab1 identify_sensillum(recording, sub = \"ab\", nshow = 5, base_size = 8) ## found correlations above 0.9 for all 2 units in: ab1 identify_sensillum(recording, sub = c(\"ac\",\"at\"), nshow = 5, base_size = 8)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"using-euclidean-distances","dir":"Articles","previous_headings":"Identifying the sensillum we are recording from with identify_sensillum()","what":"using Euclidean distances","title":"DoOR analysis tools","text":"Instead correlations can also use Euclidean distance (dis)similarity measure:","code":"identify_sensillum(recording, method = \"dist\", sub = \"ab\", nshow = 5,                     base_size = 8) ## Warning: Removed 2 rows containing missing values or values outside the scale range ## (`geom_bar()`). ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_bar()`)."},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"returning-data-instead-of-plots","dir":"Articles","previous_headings":"Identifying the sensillum we are recording from with identify_sensillum()","what":"returning data instead of plots","title":"DoOR analysis tools","text":"can also return correlation/distance data instead plot setting plot =FALSE: apparently fake recording came ab1 sensillum, admittedly quite obvious strong carbon dioxide response ab1 houses carbon dioxide receptor :)","code":"sensillumX <-   identify_sensillum(recording,   method = \"dist\",   sub = \"ab\",   plot = FALSE)   head(sensillumX) ##       receptor sensillum  OSN     unit1     unit2 ## Or7a      Or7a       ab4 ab4A 0.7131111 0.9430477 ## Or9a      Or9a       ab8 ab8B 0.5688357 1.0031663 ## Or10a    Or10a       ab1 ab1D 0.8497591 0.9363670 ## Or13a    Or13a       ab6 ab6A 0.6763409 0.8639653 ## Or22a    Or22a       ab3 ab3A 0.6596756 0.9979447 ## Or22b    Or22b       ab3 ab3A 0.1732051 1.7320508"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"private_odorant","dir":"Articles","previous_headings":"","what":"Finding neuron-specific odorants with private_odorant()","title":"DoOR analysis tools","text":"may several cases might interested called private odorants, odorants specifically activate given receptor sensory neuron. Maybe looking diagnostic odorants sensillum identification want activate specific neuronal pathway, private_odorant() returns candidate odorants task. Let’s say want specifically activate Or22a neurons: might want return odorant names instead InChiKeys: according function sec-amyl acetate good candidate. activates Or22a 0.4 (DoOR response, max 1) maximum activation tested responding units (receptors, neurons, glomeruli) 0.016, difference 0.40. Sounds good, tested 4 responding units, rather go ethyl hexanoate difference tested 29 responding units. can also restrict search sensillum responding units interest related : Ethyl 2-methylbutanoate sounds like good hit, difference units ethyl hexanoate hardly elicits response neuron. n 1 fine 2 neurons housed ab3 sensillum.","code":"private_odorant(\"Or22a\") ##                                  Or22a   max.others  n difference ## GQKZRWSUJHVIPE-UHFFFAOYSA-N 0.43570150 -0.001626778  4  0.4373283 ## SHZIWNPUGXLXDT-UHFFFAOYSA-N 0.78193674  0.417131636 29  0.3648051 ## JGHZJRVDZXSNKQ-UHFFFAOYSA-N 0.52492990  0.243725635 28  0.2812043 ## HCRBXQFHJMCTLF-UHFFFAOYSA-N 0.53683628  0.368857494 20  0.1679788 ## SMQUZDBALVYZAC-UHFFFAOYSA-N 0.07433042 -0.075854326  1  0.1501847 private_odorant(\"Or22a\", tag = \"Name\") ##                              Or22a   max.others  n difference ## sec-amyl acetate        0.43570150 -0.001626778  4  0.4373283 ## ethyl hexanoate         0.78193674  0.417131636 29  0.3648051 ## methyl octanoate        0.52492990  0.243725635 28  0.2812043 ## ethyl 2-methylbutanoate 0.53683628  0.368857494 20  0.1679788 ## salicyl aldehyde        0.07433042 -0.075854326  1  0.1501847 private_odorant(\"Or22a\", tag = \"Name\", sensillum = T) ##  ## >> Checking only against the ab3 sensillum (Or22a, Or22b, Or85b) << ##                             Or22a max.others n difference ## ethyl hexanoate         0.7819367 0.23844314 1  0.5434936 ## ethyl 2-methylbutanoate 0.5368363 0.03107633 1  0.5057599 ## diethyl succinate       0.4659812 0.05652431 1  0.4094569 ## methyl octanoate        0.5249299 0.14747177 1  0.3774581 ## E2-hexenyl acetate      0.4271672 0.05042492 1  0.3767423"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"mapping-response-data-from-an-unknown-source-with-map_receptor","dir":"Articles","previous_headings":"","what":"Mapping response data from an unknown source with map_receptor()","title":"DoOR analysis tools","text":"{#map_receptor} Similar identify_sensillum(), map_receptor() correlates response vector responding units existing DoOR consensus data. Let’s grab data set Or22a see ends : example bit circular tested data contributed consensus data…","code":"data <- data.frame(odorants  = Or22a$InChIKey, responses = Or22a$Hallem.2006.EN) data <- na.omit(data) head(data) ##                       odorants responses ## 1                          SFR         4 ## 3  VHUUQVKOLVNVRT-UHFFFAOYSA-N        17 ## 4  KIDHWZJUCRJVML-UHFFFAOYSA-N        16 ## 5  VHRGRCVQAFMJIZ-UHFFFAOYSA-N        17 ## 11 YEJRWHAVMIAJKC-UHFFFAOYSA-N        47 ## 12 JBFHTYHTHYHCDJ-UHFFFAOYSA-N       144 map_receptor(data = data, nshow = 5) ## skipped Or22c, Or24a, Or67d, pb2A as overlap (n) was < 3 ##       responding.unit   n       cor      p.value ## Or22a           Or22a 111 0.9658036 9.929338e-66 ## Or47a           Or47a 111 0.7087026 3.270693e-18 ## Or59c           Or59c  18 0.6657733 2.561096e-03 ## Or43b           Or43b 111 0.6322969 9.835057e-14 ## Or2a             Or2a 111 0.6157970 6.342287e-13"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"changing-the-response-unit-spikes-deltaff-with-back_project","dir":"Articles","previous_headings":"","what":"Changing the response unit (spikes, deltaF/F, …) with back_project()","title":"DoOR analysis tools","text":"{#back_project} DoOR consensus data normalized values 0 1. want compare DoOR data one recordings, great DoOR data unit owne data (e.g. spikerate). can back_project(), can rescale DoOR data fit given response template. example, let’s take data Hallem et al. recorded Or22a via calcium imaging rescale DoOR responses accordingly. template 2 columns named odorants responses:   yellow lines first plot represent odorant responses available original data set projected onto fitted function rescaled units “Hallem.2006.EN”. second plot shows relationship rescaled data original consensus responses.","code":"template <- data.frame(odorants  = Or22a$InChIKey,                        responses = Or22a$Hallem.2006.EN)  bp <- back_project(template, responding.unit = \"Or22a\") ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0  ## Warning: selfStart initializing functions should have a final '...' argument ## since R 4.1.0 plot(bp$back_projected$original.data,      bp$back_projected$back_projected.data,      xlab = \"DoOR consensus response\",      ylab = \"back_projected data [spikes, Hallem.2006.EN]\" ) head(bp$back_projected) ##                      odorants back_projected.data original.data template.data ## 1                         SFR            6.620103    0.08448516             4 ## 2 XLYOFNOQVPJJNP-UHFFFAOYSA-N          133.355630    0.36799124            NA ## 3 VHUUQVKOLVNVRT-UHFFFAOYSA-N           29.409493    0.18498406            17 ## 4 KIDHWZJUCRJVML-UHFFFAOYSA-N           27.357834    0.17511431            16 ## 5 VHRGRCVQAFMJIZ-UHFFFAOYSA-N           16.069298    0.08989517            17 ## 6 QGZKDVFQNNGYKY-UHFFFAOYSA-N           13.558241    0.08805285            NA ##   fitted.data ## 1  0.06872184 ## 2  0.51358830 ## 3  0.14871705 ## 4  0.14151533 ## 5  0.10189036 ## 6  0.09307606"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_tools.html","id":"quantifying-tuning-curves-with-sparse","dir":"Articles","previous_headings":"","what":"Quantifying tuning curves with sparse()","title":"DoOR analysis tools","text":"width tuning curve, .e. example many odorants receptor shows strong responses, can quantified using different sparseness measures. implemented kurtosis1 sparseness2 sparse(). high kurtosis sparseness value indicates narrow tuning curve (see also dplot_tuningCurve() DoOR visualization vignette). kurtosis able deal negative values, sparseness can’t thus values need transformed absolute values first. Sparseness scales 0 1, kurtosis -∞ ∞, kurtisis 0 corresponds Gaussian distribution.","code":"rm.SFRreset <- reset_sfr(door_response_matrix, \"SFR\")  sparse(x = rm.SFRreset[,\"Or69a\"], method = \"ltk\") ## [1] -0.2615938 sparse(x = rm.SFRreset[,\"Or69a\"], method = \"lts\") ## [1] 0.1486392 sparse(x = rm.SFRreset[,\"Gr21a.Gr63a\"], method = \"ltk\") ## [1] 23.57197 sparse(x = abs(rm.SFRreset[,\"Gr21a.Gr63a\"]), method = \"lts\") ## [1] 0.7596749"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"content","dir":"Articles","previous_headings":"","what":"Content","title":"Visualizing DoOR","text":"Loading data Visualizing odorants vs responding units dplot_response_matrix() Visualizing ensemble responses dplot_al_map() Visualizing tuning curves dplot_tuningCurve() Visualizing response profiles dplot_response_profile() Comparing response profiles dplot_compare_profiles() Visualizing odorant responses across responding units dplot_across_ru() Visualizing odorant responses across OSNs dplot_across_osns()","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"loading","dir":"Articles","previous_headings":"","what":"Loading data","title":"Visualizing DoOR","text":"First need load packages data:","code":"#load data library(DoOR.functions) ## Loading required package: DoOR.data ##  ## Welcome to DoOR.data ## Version: 2.0.1 ## Released: 2017-03-07 ##  ## Please use load_door_data() to load all data into your workspace now. ##  ## Welcome to DoOR.functions ## Version: 2.0.2 ## Released:  ##  ## Please note that all function names have been changed to 'snake_case' ##        for consistency. ##        ## Old  'camelCase' function names will stop working in one of the next ##        versions. library(DoOR.data) load_door_data(nointeraction = TRUE)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"visualizing-odorants-vs-responding-units-with-dplot_response_matrix","dir":"Articles","previous_headings":"","what":"Visualizing odorants vs responding units with dplot_response_matrix()","title":"Visualizing DoOR","text":"{#responseMatrix} dplot_response_matrix() visualizes DoOR consensus response matrix either point matrix size points relating response strength, heatmap, relating color response strength. default plot used depends data enter: positive values (like door_response_matrix door_response_matrix_non_normalized) scaled [0,1] default plotted point-matrix. provide data contains negative values (e.g. data spontaneous firing rate set 0 via reset_sfr(door_response_matrix, \"SFR\")) shown color-coded heatmap.  data contains negative values, colored response matrix plotted:","code":"dplot_response_matrix(door_response_matrix[2:50,], tag = \"Name\", base_size = 8) ## Only positive values, returning b&w point plot. dplot_response_matrix(reset_sfr(door_response_matrix, \"SFR\")[2:50,],                        tag = \"Name\", base_size = 8)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"visualizing-ensemble-responses-with-dplot_al_map","dir":"Articles","previous_headings":"","what":"Visualizing ensemble responses with dplot_al_map()","title":"Visualizing DoOR","text":"dplot_al_map() can visualize ensemble response given odorant elicits across DoOR responding units (receptors, sensory neurons, glomeruli, … ) hypothetical antennal lobe activation pattern. know InChIKey substance interested , can use trans_id() function conversion. interested expressed receptor rather glomerulus names:  prefer plain activation pattern without annotations :","code":"dplot_al_map(\"QSJXEFYPDANLFS-UHFFFAOYSA-N\", base_size = 8) dplot_al_map(trans_id(\"benzaldehyde\", from = \"Name\"), tag = \"receptor\",               main = \"SMILES\", base_size = 8) dplot_al_map(trans_id(\"628-63-7\", from = \"CAS\"), tag = \"\", main = \"\",               legend = FALSE, scalebar = FALSE)"},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"responding-units","dir":"Articles","previous_headings":"Visualizing tuning curves with dplot_tuningCurve()","what":"Responding units","title":"Visualizing DoOR","text":"set odorants given responding unit responsive can described tuning curve. dplot_tuningCurve() can easily display tuning curve together kurtosis. Kurtosis measure shape tuning curve, .e. whether responding unit narrowly tuned odorants (high kurtosis), whether responds many odorants (low kurtosis). gaussian distribution kurtosis 0. specify receptor/response unit name, data taken door_response_matrix dplot_tuningCurve() uses reset_sfr() reset spontaneous firing rate (specified odorant) zero plotting.  prevent resetting SFR:  can also plot vector responses, response.vector specified, value receptor used plot title data lookup anymore:","code":"dplot_tuningCurve(receptor = \"Or22a\", base_size = 8) dplot_tuningCurve(receptor = \"Or22a\", zero = \"\", base_size = 8) dplot_tuningCurve(receptor = \"receptor X\", response.vector = c(1:100),                    base_size = 8)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"odorants","dir":"Articles","previous_headings":"Visualizing tuning curves with dplot_tuningCurve()","what":"Odorants","title":"Visualizing DoOR","text":"dplot_tuningCurve() can well used visualize ensemble responding units activated given odorant. Therefore, specify odorant name instead response unit name:  can specify chemical identifier plot via odor.main:   finally can control color bars:  mentioned, plots generated ggplot2 package allows override theming:","code":"dplot_tuningCurve(odorant = \"PGMYKACGEOXYJE-UHFFFAOYSA-N\", base_size = 8) dplot_tuningCurve(odorant = \"PGMYKACGEOXYJE-UHFFFAOYSA-N\", odor.main = \"SMILES\",                   base_size = 8) dplot_tuningCurve(odorant = \"CURLTUGMZLYLDI-UHFFFAOYSA-N\", odor.main = \"InChI\",                   base_size = 8) dplot_tuningCurve(odorant = trans_id(\"carbon dioxide\", from = \"Name\"),                    fill.odorant = \"#FF0000\", base_size = 8) library(ggplot2) dplot_tuningCurve(odorant = trans_id(\"carbon dioxide\", from = \"Name\"),                    base_size = 8) +   theme(panel.background = element_rect(fill = \"grey\", color = \"magenta\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"visualizing-response-profiles-dplot_response_profile","dir":"Articles","previous_headings":"","what":"Visualizing response profiles dplot_response_profile()","title":"Visualizing DoOR","text":"dplot_response_profile creates horizontal bar plot response profile given receptor. displays data dplot_tuningCurve focusses odorant identity. Per default response strength displayed bar height well color code:  can omit reset SFR:  prefer monochrome data:","code":"dplot_response_profile(\"Gr21a.Gr63a\", tag = \"Name\", base_size = 8) dplot_response_profile(\"Gr21a.Gr63a\", tag = \"Name\", base_size = 8, zero =\"\") dplot_response_profile(\"Gr21a.Gr63a\", tag = \"CAS\", base_size = 8,                         colored = FALSE)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"comparing-response-profiles-dplot_compare_profiles","dir":"Articles","previous_headings":"","what":"Comparing response profiles dplot_compare_profiles()","title":"Visualizing DoOR","text":"name indicates, dplot_compare_profiles() can plot two response profiles side side comparison. syntax differs previous plots can use also compare original data sets DoOR.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"comparing-original-data-sets","dir":"Articles","previous_headings":"Comparing response profiles dplot_compare_profiles()","what":"Comparing original data sets","title":"Visualizing DoOR","text":"time, x y specify whole data.frame, .x .y take corresponding column names plotted. x specified, .x .y taken x.  see measured Or22a sensory neuron responses two data sets good accordance.","code":"dplot_compare_profiles(x = Or22a, y = Or22a, by.x = \"Pelz.2006.AntEC50\",                          by.y = \"Hallem.2004.EN\", tag = \"Name\", base_size = 8)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"comparing-door-response-profiles","dir":"Articles","previous_headings":"Comparing response profiles dplot_compare_profiles()","what":"Comparing DoOR response profiles","title":"Visualizing DoOR","text":"Next compare two DoOR consensus response profiles, measurements misexpressed receptor Or35a recordings ac3B sensory neuron naturally expresses Or35a:  “SFR” set 0:  see response profiles similar identical, expected ac3B neuron expresses receptors addition Or35a.","code":"dplot_compare_profiles(   x = door_response_matrix,   by.x = \"Or35a\",   by.y = \"ac3B\",   tag = \"Name\",   base_size = 8   ) dplot_compare_profiles(   x = reset_sfr(door_response_matrix, \"SFR\"),   by.x = \"Or35a\",   by.y = \"ac3B\",   tag = \"Name\",   base_size = 8   )"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"visualizing-responses-across-responding-units-with-dplot_across_ru","dir":"Articles","previous_headings":"","what":"Visualizing responses across responding units with dplot_across_ru()","title":"Visualizing DoOR","text":"{#acrossReceptors} dplot_across_ru() can visualize responses one several odorants elicit across receptors / responding units.","code":"odors <-   trans_id(c(\"pentyl acetate\", \"carbon dioxide\", \"2,3-butanedione\"),             from = \"Name\")   dplot_across_ru(odors, tag = \"Name\", base_size = 8)"},{"path":"https://docs.ropensci.org/DoOR.functions/articles/DoOR_visualizations.html","id":"visualizing-odorant-responses-across-osns-with-dplot_across_osns","dir":"Articles","previous_headings":"","what":"Visualizing odorant responses across OSNs with dplot_across_osns()","title":"Visualizing DoOR","text":"{#across_OSNs} dplot_across_osns() similar dplot_across_ru() responding units sorted according sensory neuron belong . sorting controlled via door_mappings DoOR.data package. two types plot dplot_across_osns() can return. Type 2 directly resembles dplot_across_ru():  type 1 data split according odorant X sensillum, color assigned corresponding neuron -D X-Z neuron’s identity unknown:  plot gets pretty messy, option restrict plotting certain subsets sensilla. can example plot responses antennal basiconic (ab) sensilla:  plot coeloconic trichoid sensilla:","code":"dplot_across_osns(odors, base_size = 8, plot.type = 2) ## Warning: Removed 37 rows containing missing values or values outside the scale range ## (`geom_bar()`). dplot_across_osns(odors, base_size = 8, plot.type = 1) ## Warning: Removed 37 rows containing missing values or values outside the scale range ## (`geom_bar()`). dplot_across_osns(odors, base_size = 8, plot.type = 1, sub = \"ab\") ## Warning: Removed 2 rows containing missing values or values outside the scale range ## (`geom_bar()`). dplot_across_osns(odors, base_size = 8, plot.type = 1, sub = c(\"ac\", \"at\")) ## Warning: Removed 19 rows containing missing values or values outside the scale range ## (`geom_bar()`)."},{"path":"https://docs.ropensci.org/DoOR.functions/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Münch. Author, maintainer. C. Giovanni Galizia. Author. Shouwen Ma. Author. Martin Strauch. Author. Anja Nissler. Author. Wolf Huetteroth. Contributor.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Münch D, Galizia C, Ma S, Strauch M, Nissler (2024). DoOR.functions: Integrating Heterogeneous Odorant Response Data Common Response Model: DoOR Complete Olfactome. R package version 2.0.2, http://neuro.uni.kn/DoOR, http://dx.doi.org/10.1038/srep21841, http://dx.doi.org/10.1093/chemse/bjq042, https://github.com/ropensci/DoOR.functions, https://docs.ropensci.org/DoOR.functions.","code":"@Manual{,   title = {DoOR.functions: Integrating Heterogeneous Odorant Response Data into a Common Response Model: A DoOR to the Complete Olfactome},   author = {Daniel Münch and C. Giovanni Galizia and Shouwen Ma and Martin Strauch and Anja Nissler},   year = {2024},   note = {R package version 2.0.2, http://neuro.uni.kn/DoOR, http://dx.doi.org/10.1038/srep21841, http://dx.doi.org/10.1093/chemse/bjq042, https://github.com/ropensci/DoOR.functions},   url = {https://docs.ropensci.org/DoOR.functions}, }"},{"path":"https://docs.ropensci.org/DoOR.functions/index.html","id":"doorfunctions","dir":"","previous_headings":"","what":"Integrating Heterogeneous Odorant Response Data into a Common Response\n    Model: A DoOR to the Complete Olfactome","title":"Integrating Heterogeneous Odorant Response Data into a Common Response\n    Model: A DoOR to the Complete Olfactome","text":"R package containing functions used build Database Odor Responses. corresponding data package can found https://github.com/ropensci/DoOR.data.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/index.html","id":"the-door-project","dir":"","previous_headings":"","what":"The DoOR Project","title":"Integrating Heterogeneous Odorant Response Data into a Common Response\n    Model: A DoOR to the Complete Olfactome","text":"Find information, precompiled R-packages interactive web-version DoOR-Database : http://neuro.uni.kn/DoOR","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Integrating Heterogeneous Odorant Response Data into a Common Response\n    Model: A DoOR to the Complete Olfactome","text":"Either download packaged version install via devtools:","code":"# install devtools install.packages(\"devtools\") library(devtools)  # install DoOR.functions 2.0.1 install_github(\"ropensci/DoOR.functions\", ref=\"v2.0.1\")  # or install the latest version available on Github install_github(\"ropensci/DoOR.functions\")"},{"path":"https://docs.ropensci.org/DoOR.functions/index.html","id":"publications","dir":"","previous_headings":"","what":"Publications","title":"Integrating Heterogeneous Odorant Response Data into a Common Response\n    Model: A DoOR to the Complete Olfactome","text":"DoOR first published 2010, OpenAccess publication available http://chemse.oxfordjournals.org/content/35/7/551 OpenAccess publication regarding comprehensive update DoOR version 2.0 available preprint manuscript related DoOR 2.0 can found bioRxiv: http://www.nature.com/articles/srep21841","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/DoOR.functions.package.html","id":null,"dir":"Reference","previous_headings":"","what":"DoOR Functions — DoOR.functions.package","title":"DoOR Functions — DoOR.functions.package","text":"Functions package providing manipulation application DoOR.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/DoOR.functions.package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DoOR Functions — DoOR.functions.package","text":"Type help(package = DoOR.functions) see complete list  datasets functions.  need quick start. First, load DoOR packages, data function package: , load datasets including precomputed response matrix: , load odorant reseponse data list: Try visualizations (e.g. producing plots paper): Try queries: case wish create response model (e.g. want  include datasets): Estimate odorant responses: Project model response values back tested values: Introduce new data DoOR update supported data sets: See Vignettes help pages documentation.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/DoOR.functions.package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DoOR Functions — DoOR.functions.package","text":"http://neuro.uni-konstanz.de/DoOR","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/DoOR.functions.package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DoOR Functions — DoOR.functions.package","text":"C. Giovanni Galizia  Daniel Muench  Martin Strauch  Anja    Nissler  Shouwen Ma Maintainer: Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":null,"dir":"Reference","previous_headings":"","what":"back_project — back_project","title":"back_project — back_project","text":"project model response values back scale interest (spike, deltaF/F...)","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"back_project — back_project","text":"","code":"back_project(template.data, responding.unit,   response_matrix = door_default_values(\"door_response_matrix\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"back_project — back_project","text":"template.data data frame, data provides scale transform , containing InChIKeys column called \"odorants\" responses column called \"responses\" responding.unit character, name receptor/OSN/glomerulus responses transformed response_matrix DoOR response matrix, source data picked ","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"back_project — back_project","text":"Output back_project list containing data frame   back_projected data, original data, data used template   data resulted fitting source template (rescaling   template scale). additionaly parameters linear fit   source template response scale returned.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"back_project — back_project","text":"process back projection following: 1. rescale data sets [0,1], 2. find best fitting model \"bp.data\" \"cons.data\" (lowest MD value), 3. project consensus data onto fitted curv, now normalized, back projected responses 4. rescale responses scale original data via linear fit.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"back_project — back_project","text":"Daniel Münch <daniel.muench@uni-konstanz.de> Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/back_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"back_project — back_project","text":"","code":"# load some data sets data(Or22a) data(door_response_matrix)  # create example data we are going to back project template.data <- data.frame(odorants = Or22a$InChIKey,                             responses = Or22a$Hallem.2004.EN)  # run back_project and plot the results bp <- back_project(template.data, \"Or22a\") #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0 #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0   plot(bp$back_projected$original.data,      bp$back_projected$back_projected.data,      xlab = \"DoOR consensus response\",      ylab = \"back_projected data [spikes, Hallem.2004.EN]\" )"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/calculate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"' select the best model function — calculate_model","title":"' select the best model function — calculate_model","text":"calculate_model used return best model function represent relationship responses study x y.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/calculate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"' select the best model function — calculate_model","text":"","code":"calculate_model(x, y, select.MD = door_default_values(\"select.MD\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/calculate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"' select the best model function — calculate_model","text":"x, y data vectors study x y (can contain NA) select.MD logical, TRUE, best model function (terms MD) returned.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/calculate_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"' select the best model function — calculate_model","text":"calculate_model chooses best model function following: linear, exponential function, sigmoid, asymptotic model x intercept, asympototic model y intercept inverse versions. (interested functions please check sources https://github.com/Dahaniel/DoOR.functions)","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/calculate_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"' select the best model function — calculate_model","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de> Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/calculate_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"' select the best model function — calculate_model","text":"","code":"# load a data set library(DoOR.data) data(Or35a)  # pick 2 data sets for Or35a and rescale the data [0,1] x <- door_norm(Or35a[,6]) y <- door_norm(Or35a[,9]) # run calculate_model calM_xy <- calculate_model(x,y, select.MD = door_default_values(\"select.MD\")) #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0 #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/count_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"count_studies — count_studies","title":"count_studies — count_studies","text":"returns matrix indiating many studies recorded individual receptor-odorant combinations","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/count_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count_studies — count_studies","text":"","code":"count_studies(ors = door_default_values(\"ORs\"),   odor_data = door_default_values(\"odor\"),   char.columns = door_default_values(\"num.charColumns\"),   ident = door_default_values(\"ident\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/count_studies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count_studies — count_studies","text":"ors data.frame containing receptors exidting DoOR. odor_data data.frame containing information odorants DoOR. char.columns number character columns receptor data.frame. ident odorant identifier used rownames.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/count_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count_studies — count_studies","text":"matrix","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/count_studies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"count_studies — count_studies","text":"","code":"# load some data library(DoOR.data) load_door_data(nointeraction = TRUE)  #run count studies and plot the result count <- count_studies() image(count)  head(count) #>                             ac1A ac1B ac2A ac2B ac3A ac3B ac4 Or1a Or2a Or7a #> SFR                            2    1    2    1    3    3   3    1    3   10 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N    1    0    1    0    2    2   2    1    1    2 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N    1    0    1    0    2    2   2    0    1    2 #> KIDHWZJUCRJVML-UHFFFAOYSA-N    2    1    2    1    3    3   3    0    1    4 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N    0    0    0    0    1    1   1    0    1    2 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N    1    1    1    1    1    1   1    0    0    2 #>                             Or9a Or10a Or13a Or19a Or22a Or22b Or22c Or23a #> SFR                            2     6     7     3    10     0     2     1 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N    1     1     2     0     1     0     1     0 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N    2     2     1     2     2     0     0     1 #> KIDHWZJUCRJVML-UHFFFAOYSA-N    2     3     2     2     3     0     0     1 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N    1     1     0     2     1     0     0     1 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N    0     1     1     0     1     0     0     0 #>                             Or24a Or30a Or33a Or33b Or33c Or35a Or42a Or42b #> SFR                             2     3     1     4     1     3     6     7 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N     1     2     1     1     0     1     3     2 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N     0     0     0     1     0     1     1     1 #> KIDHWZJUCRJVML-UHFFFAOYSA-N     0     0     0     1     0     1     1     2 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N     0     0     0     1     0     1     0     0 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N     0     0     0     0     0     0     0     1 #>                             Or43a Or43b Or45a Or45b Or46a Or47a Or47b Or49a #> SFR                             1     3     3     3     3     4     6     3 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N     0     1     2     2     1     1     0     2 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N     1     2     0     0     1     1     1     0 #> KIDHWZJUCRJVML-UHFFFAOYSA-N     1     2     0     0     1     1     1     0 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N     1     1     0     0     0     1     1     0 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N     0     0     0     0     0     0     0     0 #>                             Or49b Or59a Or59b Or59c Or65a Or67a Or67b Or67c #> SFR                             3     3     8     4     2     2     4     3 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N     1     1     1     1     0     0     2     1 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N     2     0     2     1     1     1     0     2 #> KIDHWZJUCRJVML-UHFFFAOYSA-N     3     0     3     1     1     1     0     3 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N     1     0     1     0     1     1     0     1 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N     1     0     1     0     0     0     0     1 #>                             Or67d Or71a Or74a Or82a Or85a Or85b Or85c Or85d #> SFR                             2     4     3     6     1     4     3     3 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N     0     1     2     2     0     1     2     1 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N     0     1     0     2     1     1     0     1 #> KIDHWZJUCRJVML-UHFFFAOYSA-N     0     1     0     3     1     5     0     1 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N     0     0     0     1     1     1     0     0 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N     0     0     0     1     0     1     0     0 #>                             Or85e Or85f Or88a Or92a Or94a Or94b Or98a #> SFR                             1     1     3     4     4     4     3 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N     0     0     0     1     2     2     1 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N     0     1     1     1     0     0     2 #> KIDHWZJUCRJVML-UHFFFAOYSA-N     0     1     1     2     0     0     3 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N     0     1     1     0     0     0     1 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N     0     0     0     1     0     0     1 #>                             Gr21a.Gr63a ab2B ab4B ab5B pb2A Or69a ac1 ac2 #> SFR                                   5    4    4    3    3     1   1   1 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N           0    1    1    1    1     0   1   1 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N           0    1    1    1    1     0   1   1 #> KIDHWZJUCRJVML-UHFFFAOYSA-N           0    2    2    2    1     0   1   1 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N           0    0    1    0    0     0   1   1 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N           3    1    2    1    0     0   0   0 #>                             ac3_noOr35a Ir31a Ir41a Ir75a Ir75d Ir76a Ir84a #> SFR                                   1     1     1     2     1     1     2 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N           1     1     1     2     1     1     2 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N           1     1     1     2     1     1     2 #> KIDHWZJUCRJVML-UHFFFAOYSA-N           1     1     1     2     1     1     2 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N           1     1     1     2     1     1     2 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N           0     0     0     0     0     0     0 #>                             Ir92a Ir64a.DC4 Ir64a.DP1m ac1BC ac2BC Or83c #> SFR                             1         1          1     1     1     1 #> XLYOFNOQVPJJNP-UHFFFAOYSA-N     1         1          1     1     1     0 #> VHUUQVKOLVNVRT-UHFFFAOYSA-N     1         1          1     1     1     0 #> KIDHWZJUCRJVML-UHFFFAOYSA-N     1         1          1     1     1     0 #> VHRGRCVQAFMJIZ-UHFFFAOYSA-N     1         1          1     0     0     0 #> QGZKDVFQNNGYKY-UHFFFAOYSA-N     0         0          0     0     0     1"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/create_door_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose a Response Matrix of All Odor Receptors — create_door_database","title":"Compose a Response Matrix of All Odor Receptors — create_door_database","text":"computes complete response model receptors database (calls model_response receptors). Overwrites response_matrix, door_response_matrix_non_normalized door_excluded_data.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/create_door_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose a Response Matrix of All Odor Receptors — create_door_database","text":"","code":"create_door_database(tag = door_default_values(\"tag\"),   select.MDValue = door_default_values(\"select.MDValue\"),   overlapValues = door_default_values(\"overlapValues\"), ...)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/create_door_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose a Response Matrix of All Odor Receptors — create_door_database","text":"tag character string, format rownames, possibilities: \"InChIKey\", CAS\", \"CID\", \"Name\" select.MDValue numeric, threshold MD, used reject studies align sufficiently well response model overlapValues numeric, criterion using refuse data set enough overlap value. ... pass parameters model_response","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/create_door_database.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compose a Response Matrix of All Odor Receptors — create_door_database","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de> Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/create_door_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compose a Response Matrix of All Odor Receptors — create_door_database","text":"","code":"if (FALSE) { # load DoOR data library(DoOR.data) load_door_data()  # create a new consensus matrix create_door_database() }"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_default_values.html","id":null,"dir":"Reference","previous_headings":"","what":"default values for DoOR functions — door_default_values","title":"default values for DoOR functions — door_default_values","text":"door_default_values used return default values DoOR functions.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_default_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"default values for DoOR functions — door_default_values","text":"","code":"door_default_values(DoOR_default)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_default_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"default values for DoOR functions — door_default_values","text":"DoOR_default character string, indicating argument  returned DoOR functions.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_default_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"default values for DoOR functions — door_default_values","text":"six categories default value. real number, integer, logical,  NULL, character string character vector.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_default_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"default values for DoOR functions — door_default_values","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_default_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"default values for DoOR functions — door_default_values","text":"","code":"# extract DoOR default values door_default_values(DoOR_default = \"select.MD\") #> [1] TRUE"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"rescale the data values from 0 to 1 — door_norm","title":"rescale the data values from 0 to 1 — door_norm","text":"door_norm used normalize data values 0 1.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rescale the data values from 0 to 1 — door_norm","text":"","code":"door_norm(x)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rescale the data values from 0 to 1 — door_norm","text":"x numeric vector","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_norm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rescale the data values from 0 to 1 — door_norm","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de> Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/door_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rescale the data values from 0 to 1 — door_norm","text":"","code":"# create example data x <- rnorm(10)  # run door_norm on it door_norm(x) #>  [1] 0.2892677 0.7509271 0.0000000 0.6781686 0.8530656 1.0000000 0.1716402 #>  [8] 0.6107464 0.6116181 0.6008793"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":null,"dir":"Reference","previous_headings":"","what":"dplot_across_osns — dplot_across_osns","title":"dplot_across_osns — dplot_across_osns","text":"plot activation patterns one several odorants across OSNs","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplot_across_osns — dplot_across_osns","text":"","code":"dplot_across_osns(odorants,   response_matrix = door_default_values(\"door_response_matrix\"),   odor_data = door_default_values(\"odor\"),   door_mappings = door_default_values(\"door_mappings\"),   zero = door_default_values(\"zero\"), tag = \"Name\", sub, plot.type = 1,   base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplot_across_osns — dplot_across_osns","text":"odorants character vector, one several InChIKeys response_matrix DOOR response matrix, contains data plot odor_data data frame, contains odorant information. door_mappings data frame, containing mappings response profiles morphological structures. zero character, InChIKey odorant set 0 (e.g. SFR) tag character, chemical identifier use plot, one colnames(odor) sub character vector, specify one several classes sensilla plot restricted . One several : \"ab\" \"ac\", \"\", \"ai\", \"pb\", \"sacI\", \"sacII\" plot.type interger, 1 2, defining type plot (1: facet_grid odorants * sensillae, 2: facet_wrap across OSNs) base_size numeric, base font size ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dplot_across_osns — dplot_across_osns","text":"ggplot2 object","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dplot_across_osns — dplot_across_osns","text":"DoOR response profiles selected ordered according   OSNs related . Several DoOR response profiles might exist   given OSN (e.g. one OSN one OSNs misexpressed   receptor protein) one shown. DoOR profile mapped   OSN controlled via \"code.OSN\" column DoORmapings.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dplot_across_osns — dplot_across_osns","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_osns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dplot_across_osns — dplot_across_osns","text":"","code":"# load DoOR data & functions library(DoOR.data) library(DoOR.functions)  # pick example odorants by name ans transform their ID to InChIKey  odorants <- trans_id(c(\"1-butanol\", \"isopentyl acetate\", \"carbon dioxide\", \"water\"),  from = \"Name\", to = \"InChIKey\")   # plot                                       dplot_across_osns(odorants) #> Warning: Removed 71 rows containing missing values or values outside the scale range #> (`geom_bar()`).  # plot only across ac and at sensillae dplot_across_osns(odorants, sub = c(\"ac\", \"at\")) #> Warning: Removed 44 rows containing missing values or values outside the scale range #> (`geom_bar()`).  # plot across sensory neurons dplot_across_osns(odorants, plot.type = 2) #> Warning: Removed 71 rows containing missing values or values outside the scale range #> (`geom_bar()`)."},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_ru.html","id":null,"dir":"Reference","previous_headings":"","what":"dplot_across_ru — dplot_across_ru","title":"dplot_across_ru — dplot_across_ru","text":"barplot DoOR responses set odorant across responding units DoOR","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_ru.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplot_across_ru — dplot_across_ru","text":"","code":"dplot_across_ru(odorant,   response_matrix = door_default_values(\"door_response_matrix\"),   odor_data = door_default_values(\"odor\"),   zero = door_default_values(\"zero\"), tag = \"Name\", limits,   base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_ru.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplot_across_ru — dplot_across_ru","text":"odorant character vecto, one several InChIKeys response_matrix DoOR response matrix, DoOR response matrix data source odor_data data frame, contains odorant information. zero character, InChIKey odorant set 0 tag character, chemical identifier plot odorant name (one colnames(odor)) limits numeric length 2, provided ylim range accordingly base_size numeric, base font size ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_ru.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dplot_across_ru — dplot_across_ru","text":"ggplot object","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_ru.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dplot_across_ru — dplot_across_ru","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_across_ru.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dplot_across_ru — dplot_across_ru","text":"","code":"# load data library(DoOR.data) library(DoOR.functions) data(odor)  # plot activation pattern of one or several odorants dplot_across_ru(trans_id(\"123-92-2\"), tag = \"CAS\")  dplot_across_ru(odor$InChIKey[4:10])"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":null,"dir":"Reference","previous_headings":"","what":"dplot_al_map — dplot_al_map","title":"dplot_al_map — dplot_al_map","text":"Plot antennal lobe map color coded odorant responses.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplot_al_map — dplot_al_map","text":"","code":"dplot_al_map(InChIKey,   response_matrix = door_default_values(\"door_response_matrix\"),   odor_data = door_default_values(\"odor\"),   door_mappings = door_default_values(\"door_mappings\"),   zero = door_default_values(\"zero\"),   tag = door_default_values(\"tag.ALmap\"), main = \"Name\",   scalebar = door_default_values(\"scalebar\"),   door_AL_map = door_default_values(\"door_AL_map\"),   colors = door_default_values(\"colors\"), legend = TRUE, limits,   base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplot_al_map — dplot_al_map","text":"InChIKey InChIKey specifying odorant plot response_matrix input data (e.g. door_response_matrix door_response_matrix_non_normalized) odor_data data frame, contains odorant information. door_mappings data frame containing mapping information zero odorant set zero (defaults \"SFR\") tag labels plot top glomeruli (one following door_mappings columns: \"receptor\", \"sensillum\", \"ORN\", \"glomerulus\" \"co.receptor\") main title, one column odor, defaults \"Name\" scalebar whether add scalebar door_AL_map list containing AL model colors vector containing 6 color values (2 values 0, 1 0 value 3 steps 0 1) legend logical, plot legend? limits limits color scale, empty range response matrix taken (setting ``zero`` 0) base_size numeric, base font size ggplot plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dplot_al_map — dplot_al_map","text":"ggplot2 object","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dplot_al_map — dplot_al_map","text":"Normalized, color coded odor responses across receptors mapped   onto map Drosophila antennal lobe. antennal lobe map   kind gift Veit Grabe.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"dplot_al_map — dplot_al_map","text":"Grabe, V., Strutz, ., Baschwitz, ., Hansson, B.S., Sachse, S.,   2014. digital vivo 3D atlas antennal lobe Drosophila   melanogaster. J. Comp. Neurol. n/–n/. doi:10.1002/cne.23697","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dplot_al_map — dplot_al_map","text":"Daniel Münch daniel.muench@uni-konstanz.de Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_al_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dplot_al_map — dplot_al_map","text":"","code":"# load data library(DoOR.data) library(DoOR.functions)  # map responses on antennal lobe scheme dplot_al_map(\"MLFHJEHSLIIPHL-UHFFFAOYSA-N\", scalebar = FALSE)   # change colors dplot_al_map(\"MLFHJEHSLIIPHL-UHFFFAOYSA-N\", tag = \"Ors\",    color = c(\"magenta\", \"pink\", \"white\", \"yellow\", \"orange\", \"red\")) #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_text()`).   # pass some ggplot2 theming parameters dplot_al_map(trans_id(\"123-92-2\"), scalebar = FALSE) + ggplot2::theme(legend.position  = \"bottom\",      panel.background = ggplot2::element_rect(fill = \"grey90\", color = NA)) + ggplot2::ggtitle(\"responses elicited by isopentyl acetate\")   # export as pdf if (FALSE) { p <- dplot_al_map(trans_id(\"123-92-2\")) ggplot2::ggsave(\"AL.response.pdf\", p, width = 6, height = 2, scale = 2) }"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_compare_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two response profiles — dplot_compare_profiles","title":"Compare two response profiles — dplot_compare_profiles","text":"Orderdered bar plots two studies, allowing easy comparison two studies / response profiles'.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_compare_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two response profiles — dplot_compare_profiles","text":"","code":"dplot_compare_profiles(x, y, by.x, by.y, tag = \"Name\", base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_compare_profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two response profiles — dplot_compare_profiles","text":"x input data frame first response profile taken y input data frame second response profile taken (x taken y missing) .x character string, specifying column x .y character string, specifying column y tag character, chemical identifier used odorant label. base_size numeric, base font size ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_compare_profiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare two response profiles — dplot_compare_profiles","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_compare_profiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two response profiles — dplot_compare_profiles","text":"","code":"# load data library(DoOR.data) library(DoOR.functions) data(Or22a) data(door_response_range) data(door_response_matrix)  # compare the Hallem and the Pelz data set for Or22a dplot_compare_profiles(x = Or22a, y = Or22a,                          by.x = \"Hallem.2006.EN\",                          by.y = \"Pelz.2006.AntEC50\")   # comparedata from two different sensory neurons and add odorant labels  dplot_compare_profiles(x = cbind(door_response_matrix, InChIKey = rownames(door_response_matrix)), y = cbind(door_response_matrix, InChIKey = rownames(door_response_matrix)), by.x = \"Or22a\", by.y = \"Or10a\")"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"dplot_response_matrix — dplot_response_matrix","title":"dplot_response_matrix — dplot_response_matrix","text":"plot DoOR responses point matrix","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplot_response_matrix — dplot_response_matrix","text":"","code":"dplot_response_matrix(data, odor_data = door_default_values(\"odor\"),   tag = door_default_values(\"tag\"), colors = door_default_values(\"colors\"),   flip = FALSE, fix = TRUE, bw = FALSE, point = FALSE, limits,   base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplot_response_matrix — dplot_response_matrix","text":"data subset e.g. door_response_matrix odor_data data frame, contains odorant information. tag chemical identfier plot (one colnames(odor)) colors colors use negative values supplied (range 5  colors, 2 negative values, 1 0 3 positive values) flip logical, TRUE x y axes flipped fix logical, whether fix ratio tiles plotting  heatmap bw logical, whether plot b&w colored point logical, TRUE point matrix instead heatmap returned (default supply positive values) limits limits scale, calculated set base_size numeric, base font size ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dplot_response_matrix — dplot_response_matrix","text":"dotplot limits[1] >= 0  heatmap limits[1] < 0","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dplot_response_matrix — dplot_response_matrix","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dplot_response_matrix — dplot_response_matrix","text":"","code":"# load data library(DoOR.data) data(door_response_matrix)  # reset the spontaneous firing rate to 0 tmp <- reset_sfr(door_response_matrix, \"SFR\")  # plot heatmap / coloured tiles dplot_response_matrix(tmp[10:50,], tag = \"Name\",   limits = range(tmp, na.rm = TRUE))   # plot dotplot dplot_response_matrix(door_response_matrix[10:50,], tag = \"Name\",                         limits = range(door_response_matrix, na.rm = TRUE)) #> Only positive values, returning b&w point plot."},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"dplot_response_profile — dplot_response_profile","title":"dplot_response_profile — dplot_response_profile","text":"create barplot DoOR response profile","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplot_response_profile — dplot_response_profile","text":"","code":"dplot_response_profile(receptor,   response_matrix = door_default_values(\"door_response_matrix\"),   odor_data = door_default_values(\"odor\"), tag = door_default_values(\"tag\"),   colored = TRUE, colors = door_default_values(\"colors\"), limits,   zero = door_default_values(\"zero\"),   scalebar = door_default_values(\"scalebar\"), base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplot_response_profile — dplot_response_profile","text":"receptor character, receptor name, colnames(door_response_matrix) response_matrix DoOR door_response_matrix odor_data data frame, contains odorant information. tag character, chemical identifier annotation colored logical, color code bars according response value? colors character vector, vector 5 colors (2 values < 0, 1  value 0 3 values > 0) limits numeric length 2, limits colorscale x  axis, global range data used empty zero character, odorant response set 0, defaults  \"SFR\" scalebar logical, add suppress scalebars base_size numeric, base font size ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dplot_response_profile — dplot_response_profile","text":"ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_profile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dplot_response_profile — dplot_response_profile","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_response_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dplot_response_profile — dplot_response_profile","text":"","code":"# load data library(DoOR.data) data(door_response_matrix)  # plot with default parameters dplot_response_profile(\"Or22a\", door_response_matrix)   # plot wit odorant names dplot_response_profile(\"Or22a\", door_response_matrix, tag = \"Name\")"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_tuningCurve.html","id":null,"dir":"Reference","previous_headings":"","what":"dplot_tuningCurve — dplot_tuningCurve","title":"dplot_tuningCurve — dplot_tuningCurve","text":"plot receptor odorant tuning curve","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_tuningCurve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplot_tuningCurve — dplot_tuningCurve","text":"","code":"dplot_tuningCurve(receptor, odorant, response.vector,   response_matrix = door_default_values(\"door_response_matrix\"),   odor_data = door_default_values(\"odor\"),   zero = door_default_values(\"zero\"),   fill.receptor = door_default_values(\"color.receptor\"),   fill.odorant = door_default_values(\"color.odorant\"), odor.main = \"Name\",   limits, base_size = 12)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_tuningCurve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplot_tuningCurve — dplot_tuningCurve","text":"receptor character, receptor name (one ORS$) odorant character, odorant name (InChIKey) response.vector numerical vector, vector responses, empty  taken door_response_matrix response_matrix DoOR response matrix, response vector taken  , needed response.vector given odor_data data frame, contains odorant information. zero InChIKey, set zero, default SFR, ignored data  provided via response.vector, set \"\" want subtract  anything fill.receptor color code, bar color receptor tuning curve fill.odorant color code, bar color odorant tuning curve odor.main odor identifier plot, one colnamed(odor) limits numerical vector length 2, y limits tuning curve base_size numeric, base font size ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_tuningCurve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dplot_tuningCurve — dplot_tuningCurve","text":"ggplot object","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_tuningCurve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dplot_tuningCurve — dplot_tuningCurve","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/dplot_tuningCurve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dplot_tuningCurve — dplot_tuningCurve","text":"","code":"# load data library(DoOR.data) data(door_response_matrix) data(odor)  # plot a tuning curve for an odorant dplot_tuningCurve(odorant = odor$InChIKey[2])  # or for a receptor dplot_tuningCurve(receptor = \"Or22a\")   # adjust the plotting range range <- range(reset_sfr(door_response_matrix, \"SFR\"), na.rm = TRUE) dplot_tuningCurve(receptor = \"Or10a\", limits = range,                    fill.receptor = \"magenta\")   # plot with manual input data as receptor tuning curve dplot_tuningCurve(receptor = \"receptor X\", response.vector = c(1:100))  # or as odor tuning curve dplot_tuningCurve(odorant = \"odor X\", response.vector = rnorm(200))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the missing entries in a response data — estimate_missing_value","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"Estimate missing entries response data","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"","code":"estimate_missing_value(data, nodor, method = \"PC\")"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"data data frame matrix, contaning consensus response values nodor numeric value, specifying number selected odors method character string, specifying method (\"PC\" (Pearson's coefficient) \"Knn\" (k nearest neighbors)) estimation, default \"PC\".","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"wrapper programe using Pearson Correlation k-nearest neighbors estimate missing entries response matrix.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"Kim, H., Golub, G. H. & Park, H., Missing value estimation DNA microarray gene expression data: local least squares imputation., 2005, Bioinformatics, 21, 187-198","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/estimate_missing_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the missing entries in a response data — estimate_missing_value","text":"","code":"if (FALSE) { # load data library(DoOR.data) data(door_response_matrix)  # pick an example subset subset <- door_response_matrix[1:100, 11:30]  # estimate missing values est.data <- estimate_missing_value(data = subset, nodor = 6) }"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/export_door_data.html","id":null,"dir":"Reference","previous_headings":"","what":"export data — export_door_data","title":"export data — export_door_data","text":"export odor response data supported data","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/export_door_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"export data — export_door_data","text":"","code":"export_door_data(file.format, directory,   odorantReceptors = door_default_values(\"ORs\"),   response_matrix = door_default_values(\"door_response_matrix\"),   responseRange = door_default_values(\"door_response_range\"),   unglobalNorm_RM = door_default_values(\"door_response_matrix_non_normalized\"),   weightGlobNorm = door_default_values(\"door_global_normalization_weights\"),   all.data = TRUE)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/export_door_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"export data — export_door_data","text":"file.format character string, format given file, either \".txt\"  \".csv\" directory character string, naming directory writing.  missing, exported data saved current working directory. odorantReceptors data frame, receptor names expressions response_matrix data matrix, global unnormalized responses matrix responseRange data frame, response ranges study unglobalNorm_RM data matrix, unnormalized responses matrix weightGlobNorm data frame, weight matrix global normalizazion .data logical, TRUE, export odorant response data supported  data \"door_response_matrix\", \"door_response_range\",  \"door_response_matrix_non_normalized\", \"door_response_matrix\",  \"door_global_normalization_weights\" \"ORs\".","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/export_door_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"export data — export_door_data","text":"Please load ORs data package DoOR.data typing (data(ORs))  use.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/export_door_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"export data — export_door_data","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/export_door_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"export data — export_door_data","text":"","code":"if (FALSE) { # load data library(DoOR.data) library(DoOR.functions) load_door_data()  # export odorant response data only export_door_data(\".txt\", all.data = FALSE)    }"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"getDataset — get_dataset","title":"getDataset — get_dataset","text":"aggregates original data given study","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getDataset — get_dataset","text":"","code":"get_dataset(study, na.rm = FALSE)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getDataset — get_dataset","text":"study character, name study want aggregate dta na.rm logical, whether exclude odorants measured study","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getDataset — get_dataset","text":"returns data frame containing odorant responses measured  study","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_dataset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"getDataset — get_dataset","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getDataset — get_dataset","text":"","code":"# load data library(DoOR.data) load_door_data(nointeraction = TRUE)  # get all recordings from the Hallem.2004.EN data set get_dataset(\"Hallem.2004.EN\", na.rm = TRUE) #>        Class                    Name                    InChIKey     CID #> 1       <NA>                     sfr                         SFR     SFR #> 4      amine              putrescine KIDHWZJUCRJVML-UHFFFAOYSA-N    1045 #> 12    O ring       gamma-hexalactone JBFHTYHTHYHCDJ-UHFFFAOYSA-N   12756 #> 31    sulfid 3-methylthio-1-propanol CZUGFKJYCPYHHV-UHFFFAOYSA-N   10448 #> 34    sulfid            propanethiol SUVIGLJNEAMWEG-UHFFFAOYSA-N    7848 #> 36   terpene            alpha-pinene GRWFGVWFFZKLTI-UHFFFAOYSA-N    6654 #> 44   terpene         geranyl acetate HIGQPQRQIQDZMP-DHZHZOJOSA-N 1549026 #> 46   terpene                geraniol GLZPCOQZEFWAFX-JXMROGBWSA-N  637566 #> 48   terpene                linalool CDOSHBSSFJOMGT-UHFFFAOYSA-N    6549 #> 55   terpene                  citral WTEVQBCEXWBHNA-JXMROGBWSA-N  638011 #> 74  aldehyde              E2-hexenal MBDOYVRWFFCFHM-SNAWJCMRSA-N 5281168 #> 75    O ring                furfural HYBBIBNJHNGZAN-UHFFFAOYSA-N    7362 #> 77  aldehyde                 octanal NUJGJRNETVAIRJ-UHFFFAOYSA-N     454 #> 83    ketone                 acetone CSCPPACGZOOCGX-UHFFFAOYSA-N     180 #> 85    ketone             2-pentanone XNLICIUVMPYHGG-UHFFFAOYSA-N    7895 #> 86    ketone             2-heptanone CATSNJVOTSVZJV-UHFFFAOYSA-N    8051 #> 88    ketone         2,3-butanedione QSJXEFYPDANLFS-UHFFFAOYSA-N     650 #> 89    ketone    3-hydroxy-2-butanone ROWKJAVDOGWPAT-UHFFFAOYSA-N     179 #> 93    ketone           cyclohexanone JHIVVAPYMSGYDF-UHFFFAOYSA-N    7967 #> 94    ketone              2-octanone ZPVFWPFBNIEHGJ-UHFFFAOYSA-N    8093 #> 98      arom          benzyl alcohol WVDDGKGOMKODPV-UHFFFAOYSA-N     244 #> 99      arom       methyl salicylate OSWPMRLSEDHDFF-UHFFFAOYSA-N    4133 #> 103     arom            benzaldehyde HUMNYLRZRPPJDN-UHFFFAOYSA-N     240 #> 104     arom      phenylacetaldehyde DTUQWGWMVIHBKE-UHFFFAOYSA-N     998 #> 105     arom            acetophenone KWOLFJPFCHCOCG-UHFFFAOYSA-N    7410 #> 107     arom          2-methylphenol QWVGKYWNOKOFNN-UHFFFAOYSA-N     335 #> 120     arom          4-methylphenol IWDCLRJOBJJRNH-UHFFFAOYSA-N    2879 #> 121     arom           4-ethylphenol HXDOZKJGKXYMEW-UHFFFAOYSA-N   31242 #> 126     arom          benzyl acetate QUKGYYKBILRGFE-UHFFFAOYSA-N    8785 #> 127     arom          4-propylphenol KLSLBUSXWBJMEC-UHFFFAOYSA-N   12580 #> 128     arom          3-methylphenol RLSSMJSEOOYNOY-UHFFFAOYSA-N     342 #> 135  alcohol               1-butanol LRHPLDYGYMQRHN-UHFFFAOYSA-N     263 #> 137  alcohol               1-hexanol ZSIAUFGUXNUGDI-UHFFFAOYSA-N    8103 #> 138  alcohol               1-octanol KBPLFHHGFOOTCA-UHFFFAOYSA-N     957 #> 144  alcohol            1-octen-3-ol VSMOENVRRABVKN-UHFFFAOYSA-N   18827 #> 145  alcohol              E2-hexenol ZCHHRLHTBGRGOT-SNAWJCMRSA-N 5318042 #> 150  alcohol          2,3-butanediol OWBTYPJTUOEWEK-UHFFFAOYSA-N     262 #> 151  alcohol            cyclohexanol HPXRVTGHNJAIIH-UHFFFAOYSA-N    7966 #> 155  alcohol               3-octanol NMRPBPVERJPACX-UHFFFAOYSA-N   11527 #> 156  alcohol               1-nonanol ZWRUINPWMLAQRD-UHFFFAOYSA-N    8914 #> 164    ester           ethyl acetate XEKOWRVHYACXOJ-UHFFFAOYSA-N    8857 #> 166    ester           butyl acetate DKPFZGUDAPQIHT-UHFFFAOYSA-N   31272 #> 167    ester          pentyl acetate PGMYKACGEOXYJE-UHFFFAOYSA-N   12348 #> 170    ester       isopentyl acetate MLFHJEHSLIIPHL-UHFFFAOYSA-N   31276 #> 171    ester      E2-hexenyl acetate HRHOWZHRCRZVCU-WAYWQWQTSA-N 2733294 #> 173    ester          ethyl butyrate OBNCKNCVKJNDBV-UHFFFAOYSA-N    7762 #> 175    ester ethyl 3-hydroxybutyrate OMSUIQOIVADKIM-UHFFFAOYSA-N   62572 #> 176    ester        ethyl propionate FKRCODPIKNYEAC-UHFFFAOYSA-N    7749 #> 179    ester         ethyl hexanoate SHZIWNPUGXLXDT-UHFFFAOYSA-N   31265 #> 192   N ring                  indole SIKJAQJRHWYJAI-UHFFFAOYSA-N     798 #> 199    ester ethyl 2-methylbutanoate HCRBXQFHJMCTLF-UHFFFAOYSA-N   24020 #> 201    ester        ethyl pentanoate ICMAFTSLXCXHRK-UHFFFAOYSA-N   10882 #> 221    other                     oil                     solvent solvent #> 225    other          carbon dioxide CURLTUGMZLYLDI-UHFFFAOYSA-N     280 #> 227   N ring             pyrrolidine RWRDLPDLKQPQOW-UHFFFAOYSA-N   31268 #> 666     <NA>     (R)-(+)-citronellal NEHNMFOYXAPHSD-SNVBAGLBSA-N   75427 #>           CAS   Or2a    Or7a    Or9a   Or10a   Or19a   Or22a  Or23a   Or33b #> 1         SFR     NA  15.592      NA      NA      NA   6.186     NA   0.000 #> 4    110-60-1     NA      NA      NA      NA      NA      NA     NA      NA #> 12   695-06-7     NA      NA      NA      NA      NA      NA 24.167      NA #> 31   505-10-2     NA      NA      NA      NA      NA      NA     NA      NA #> 34   107-03-9     NA      NA      NA      NA      NA      NA     NA      NA #> 36    80-56-8     NA      NA      NA      NA      NA      NA     NA      NA #> 44   105-87-3 16.667  44.833  29.167  19.333  54.167  27.333 17.167  -1.583 #> 46   106-24-1     NA      NA      NA      NA      NA      NA     NA      NA #> 48    78-70-6     NA      NA      NA      NA      NA      NA     NA      NA #> 55  5392-40-5     NA      NA      NA      NA      NA      NA     NA      NA #> 74  6728-26-3 21.167 229.500  46.667  11.667  39.333  28.000 63.333  -6.083 #> 75    98-01-1 35.167      NA      NA      NA      NA      NA 24.333      NA #> 77   124-13-0     NA      NA      NA      NA      NA      NA     NA      NA #> 83    67-64-1     NA      NA      NA      NA      NA      NA     NA      NA #> 85   107-87-9     NA      NA      NA      NA      NA      NA     NA      NA #> 86   110-43-0 52.333   0.667  98.833  10.500 153.833  82.500 54.167  -7.333 #> 88   431-03-8 21.333  53.167 152.500  31.500  52.167  80.833 32.000  -4.167 #> 89   513-86-0 65.000      NA 203.000      NA      NA      NA     NA      NA #> 93   108-94-1 41.500      NA      NA      NA      NA      NA 53.500      NA #> 94   111-13-7     NA      NA      NA      NA 192.000      NA     NA      NA #> 98   100-51-6     NA      NA      NA      NA      NA      NA     NA      NA #> 99   119-36-8 20.000  14.833  25.000 249.500  61.667  17.500 16.000  -8.083 #> 103  100-52-7     NA 206.333      NA  70.833      NA      NA     NA      NA #> 104  122-78-1     NA      NA      NA      NA      NA      NA     NA      NA #> 105   98-86-2     NA      NA      NA 204.833      NA      NA     NA      NA #> 107   95-48-7     NA      NA      NA      NA      NA      NA     NA      NA #> 120  106-44-5     NA      NA      NA      NA      NA      NA     NA      NA #> 121  123-07-9     NA      NA      NA      NA      NA      NA     NA      NA #> 126  140-11-4     NA      NA      NA      NA      NA      NA     NA      NA #> 127  645-56-7     NA      NA      NA      NA      NA      NA     NA      NA #> 128  108-39-4     NA      NA      NA      NA      NA      NA     NA      NA #> 135   71-36-3     NA 205.167      NA      NA      NA      NA     NA      NA #> 137  111-27-3 41.500 113.167  95.833   5.500 152.500  68.167 57.167 -11.417 #> 138  111-87-5     NA      NA      NA      NA 136.500      NA     NA      NA #> 144 3391-86-4 35.667  30.667  50.667   2.000 171.333 108.333 33.333 -14.917 #> 145  928-95-0     NA      NA      NA      NA      NA      NA     NA      NA #> 150  513-85-9     NA      NA 189.333      NA      NA      NA     NA      NA #> 151  108-93-0 51.000      NA      NA      NA      NA      NA 42.833      NA #> 155  589-98-0     NA      NA      NA      NA      NA      NA     NA      NA #> 156  143-08-8     NA      NA      NA      NA      NA      NA     NA      NA #> 164  141-78-6 17.833  35.833  71.833  24.000  61.000  59.667 17.000  -3.583 #> 166  123-86-4     NA      NA      NA      NA 125.500 124.833     NA -15.500 #> 167  628-63-7 59.500  10.500  87.833  11.500 150.167 156.500 45.500 -13.167 #> 170  123-92-2     NA   1.500      NA 116.333 162.833 144.167     NA      NA #> 171 2497-18-9     NA      NA      NA      NA      NA      NA     NA      NA #> 173  105-54-4 20.333  10.833 121.167  25.000  93.333 168.000 24.167   5.000 #> 175 5405-41-4     NA      NA      NA      NA      NA      NA     NA -17.417 #> 176  105-37-3     NA      NA  80.000      NA      NA 124.167     NA  36.917 #> 179  123-66-0     NA      NA      NA      NA      NA      NA     NA  -7.167 #> 192  120-72-9     NA      NA      NA      NA      NA      NA     NA      NA #> 199 7452-79-1     NA      NA      NA      NA      NA      NA     NA      NA #> 201  539-82-2     NA      NA      NA      NA      NA      NA     NA      NA #> 221   solvent 16.333  27.667  11.333  17.000  16.000  10.000  8.833   0.500 #> 225  124-38-9 17.167  26.000   8.167  19.500  12.667   6.000 14.667   2.417 #> 227  123-75-1     NA      NA      NA      NA      NA      NA     NA      NA #> 666  106-23-0     NA      NA      NA      NA      NA      NA     NA      NA #>       Or35a   Or43a   Or43b   Or47a  Or47b   Or49b   Or59b  Or65a   Or67a #> 1        NA      NA      NA      NA 73.076      NA   7.008     NA      NA #> 4        NA      NA      NA      NA     NA      NA      NA     NA      NA #> 12       NA      NA      NA      NA 40.743      NA      NA     NA      NA #> 31       NA      NA      NA 231.167     NA      NA      NA     NA      NA #> 34       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 36       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 44   21.667  27.500  21.000   6.333 56.243  10.167  25.921 19.833  29.500 #> 46       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 48       NA      NA      NA      NA     NA      NA  -2.079     NA      NA #> 55       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 74  200.167  84.500 103.667  39.500 64.076   9.833  20.087 14.667  71.500 #> 75       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 77  176.000      NA      NA      NA     NA      NA      NA     NA      NA #> 83       NA      NA      NA      NA     NA      NA  84.921     NA      NA #> 85  100.333      NA      NA      NA     NA      NA      NA     NA      NA #> 86  116.833  71.833  75.167 182.833 33.493  16.000  26.754 39.500 111.000 #> 88   69.000  46.667  75.667  37.167 49.826  24.667 119.504 35.000  42.667 #> 89       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 93       NA 127.000      NA      NA 64.493      NA      NA     NA      NA #> 94       NA      NA      NA      NA     NA      NA      NA     NA      NA #> 98       NA  83.167      NA      NA     NA      NA      NA 16.333      NA #> 99   23.667  55.333  18.500   0.167 72.993  27.000   4.504  5.833  25.333 #> 103      NA  72.667      NA      NA     NA      NA      NA  9.833      NA #> 104      NA  35.667      NA      NA     NA      NA      NA     NA      NA #> 105      NA      NA      NA      NA     NA      NA      NA     NA      NA #> 107      NA      NA      NA      NA     NA 175.833      NA     NA      NA #> 120      NA      NA      NA      NA     NA  67.500      NA     NA      NA #> 121      NA      NA      NA      NA     NA  51.167      NA     NA      NA #> 126      NA      NA      NA      NA     NA      NA      NA 25.667      NA #> 127      NA      NA      NA      NA     NA  33.833      NA     NA      NA #> 128      NA      NA      NA      NA     NA 102.333      NA     NA      NA #> 135 222.000      NA      NA      NA     NA      NA      NA     NA      NA #> 137 216.000 149.500 125.333  60.833  8.410  20.667  30.087 24.167  92.000 #> 138      NA  23.667      NA      NA     NA      NA      NA     NA      NA #> 144 209.667 112.667  54.167  84.667 25.743  13.333  16.004 21.000  98.333 #> 145      NA      NA      NA      NA     NA      NA      NA     NA      NA #> 150      NA      NA      NA      NA     NA      NA      NA     NA      NA #> 151      NA 139.000      NA      NA 38.743      NA      NA     NA      NA #> 155      NA      NA      NA      NA     NA      NA      NA     NA 110.167 #> 156 163.667      NA      NA      NA     NA      NA      NA     NA      NA #> 164  33.333  30.333 178.167 115.000 52.826  17.833 121.087 17.833  42.667 #> 166      NA      NA 202.667      NA     NA      NA      NA     NA      NA #> 167 201.500  52.667 112.833 255.833 26.160  15.000  36.421 36.167 130.000 #> 170      NA      NA      NA      NA     NA      NA      NA     NA 122.000 #> 171      NA      NA      NA      NA     NA      NA      NA     NA  46.333 #> 173 101.167  62.833 210.667  84.000 41.576   9.333  26.421 16.333 101.000 #> 175 185.500      NA      NA      NA     NA      NA      NA     NA      NA #> 176      NA      NA      NA      NA     NA      NA  66.171     NA  55.667 #> 179      NA      NA  49.500      NA     NA      NA      NA     NA 154.833 #> 192      NA      NA      NA      NA     NA      NA      NA  7.167      NA #> 199      NA      NA      NA      NA     NA      NA      NA     NA      NA #> 201      NA      NA 164.667      NA     NA      NA      NA     NA      NA #> 221  26.833  25.167   7.667  13.333 72.576   7.333  10.921 13.167  15.833 #> 225  20.000  23.500   6.333  15.333 71.826   7.833  10.587 17.333  18.500 #> 227      NA      NA      NA      NA     NA      NA      NA 59.167      NA #> 666      NA      NA      NA      NA     NA      NA      NA     NA      NA #>       Or67c   Or82a   Or85a   Or85b  Or85f   Or88a   Or98a #> 1        NA      NA      NA      NA     NA   0.000      NA #> 4        NA      NA      NA  79.500     NA      NA      NA #> 12       NA      NA      NA      NA 59.000      NA      NA #> 31       NA      NA      NA      NA     NA      NA      NA #> 34       NA      NA      NA 116.667     NA      NA      NA #> 36       NA  19.500      NA      NA     NA      NA      NA #> 44    5.000 211.667  10.833  64.333  8.000   1.333  81.167 #> 46       NA  30.333      NA      NA     NA      NA      NA #> 48       NA  34.545      NA      NA     NA      NA 159.333 #> 55       NA  71.667      NA      NA     NA      NA      NA #> 74   58.833  12.333  30.500 186.500 35.333  -5.083  45.833 #> 75       NA      NA      NA      NA 56.333      NA      NA #> 77       NA      NA      NA      NA     NA      NA      NA #> 83       NA      NA      NA      NA     NA      NA      NA #> 85       NA      NA      NA      NA     NA      NA      NA #> 86   53.000  40.000  42.833 238.667 54.000  -8.583 220.833 #> 88   47.667  34.500  36.667 175.833 31.500   5.583  44.667 #> 89       NA      NA      NA      NA     NA      NA      NA #> 93       NA      NA      NA      NA     NA      NA      NA #> 94       NA      NA      NA      NA     NA      NA      NA #> 98       NA      NA      NA      NA     NA      NA      NA #> 99    2.333  12.333   6.333  52.167 19.333  -6.500  29.500 #> 103      NA      NA      NA      NA 41.667      NA      NA #> 104      NA      NA      NA      NA     NA      NA      NA #> 105      NA      NA      NA      NA     NA      NA      NA #> 107      NA      NA      NA      NA     NA      NA      NA #> 120      NA      NA      NA      NA     NA      NA      NA #> 121      NA      NA      NA      NA     NA      NA      NA #> 126      NA      NA      NA      NA     NA      NA      NA #> 127      NA      NA      NA      NA     NA      NA      NA #> 128      NA      NA      NA      NA     NA      NA      NA #> 135      NA      NA      NA      NA     NA      NA      NA #> 137  99.167  47.000 141.667 247.000 64.000 -10.583 167.833 #> 138      NA      NA      NA      NA     NA      NA      NA #> 144  25.167  35.333  45.000 234.167 32.667 -11.750 196.833 #> 145 100.333      NA 141.500      NA     NA      NA 191.667 #> 150      NA      NA      NA      NA     NA      NA      NA #> 151      NA      NA      NA      NA 62.167      NA      NA #> 155      NA      NA      NA 245.000     NA      NA      NA #> 156      NA      NA      NA      NA     NA      NA      NA #> 164  35.167  27.167  56.833  39.333 25.333  -0.500  27.000 #> 166      NA      NA      NA      NA     NA      NA      NA #> 167  28.167  38.833  34.333 254.667 38.333 -11.917 231.333 #> 170      NA      NA      NA      NA     NA      NA      NA #> 171  10.667      NA      NA      NA     NA      NA      NA #> 173 135.000  33.500 132.167 141.833 30.333  -4.417 113.167 #> 175  54.333      NA      NA      NA     NA      NA      NA #> 176  47.000      NA      NA      NA     NA      NA  41.833 #> 179      NA      NA      NA      NA     NA      NA      NA #> 192      NA      NA      NA      NA     NA  -5.083      NA #> 199  91.000      NA  58.167      NA     NA      NA      NA #> 201      NA      NA      NA      NA     NA      NA      NA #> 221   4.333  13.667  11.000  58.333  4.000   1.250  21.167 #> 225   6.833  13.833  15.000  44.000  4.667  -0.667  45.667 #> 227      NA      NA      NA      NA     NA  81.333      NA #> 666      NA  49.333      NA      NA     NA      NA      NA"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_normalized_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Find normalised receptor responses — get_normalized_responses","title":"Find normalised receptor responses — get_normalized_responses","text":"given chemical, get normalised receptor responses studies  database.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_normalized_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find normalised receptor responses — get_normalized_responses","text":"","code":"get_normalized_responses(odors, zero = door_default_values(\"zero\"),   response_matrix = door_default_values(\"door_response_matrix\"), round = 3,   na.rm = FALSE)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_normalized_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find normalised receptor responses — get_normalized_responses","text":"odors character vector, one odors provided InChIKey. zero InChIKey background set zero. default \"SFR\", .e. spontaneous firing rate. response_matrix data frame, e.g. \"door_response_matrix\" loaded model_response. also possible create frame manually using model_response. round numeric, round amount digits, set NA want round na.rm logical, remove NAs?","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_normalized_responses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find normalised receptor responses — get_normalized_responses","text":"Daniel Münch daniel.muench@uni-konstanz.de","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_normalized_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find normalised receptor responses — get_normalized_responses","text":"","code":"# load data library(DoOR.data) data(door_response_matrix)  # define a list of odorants odors <- c(\"MLFHJEHSLIIPHL-UHFFFAOYSA-N\",            \"OBNCKNCVKJNDBV-UHFFFAOYSA-N\",            \"IKHGUXGNUITLKF-UHFFFAOYSA-N\")  # get the normalized responses for these odorants result <- get_normalized_responses(odors,                                     response_matrix = door_response_matrix)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Find receptor responses — get_responses","title":"Find receptor responses — get_responses","text":"given chemical, get original receptor responses studies database.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find receptor responses — get_responses","text":"","code":"get_responses(odorant,   responseRange = door_default_values(\"door_response_range\"),   Or.list = load2list())"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find receptor responses — get_responses","text":"odorant single odor provided InChIKey responseRange data frame, response ranges studies .list list contains reponse data available receptors. can loaded using load2list.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_responses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find receptor responses — get_responses","text":"output data frame containing response values given odor across receptors available studies.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_responses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find receptor responses — get_responses","text":"Daniel Münch daniel.muench@uni-konstanz.de","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/get_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find receptor responses — get_responses","text":"","code":"# load data library(DoOR.data) load_door_data(nointeraction = TRUE)  # get raw responses for odorant MLFHJEHSLIIPHL-UHFFFAOYSA-N responses <- get_responses(odorant = 'MLFHJEHSLIIPHL-UHFFFAOYSA-N')"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/identify_sensillum.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_sensillum — identify_sensillum","title":"identify_sensillum — identify_sensillum","text":"correlates result SSR recording several odorants  DoOR response profiles","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/identify_sensillum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_sensillum — identify_sensillum","text":"","code":"identify_sensillum(recording,   response_matrix = door_default_values(\"door_response_matrix\"),   odor_data = door_default_values(\"odor\"),   door_mappings = door_default_values(\"door_mappings\"), tag = \"Name\",   min.cor = 0.9, nshow = 10, method = \"cor\", sub, base_size = 12,   plot = TRUE, use = \"everything\")"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/identify_sensillum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_sensillum — identify_sensillum","text":"recording data frame, data frame following columns  \"odorants\" containing InChIKeys tested odorrant, one column  called \"unit1\" etc. unit, containing responses (estimates)  scaled 0 1 (see examples) response_matrix DoOR response matrix, data compair odor_data data frame, contains odorant information. door_mappings data frame containing mapping information tag character, chemical identifier use plots, one  colnames(odor) min.cor numeric, minimum correlation value, function check  wether higher correlation units within single  sensillum nshow numeric, number plots nshow, plot e.g. top 10 matches method character, method similarity calculations: correlation  (\"cor\") Euclidean distances (\"dist\") sub character, know class sensillum recording  can restrict search subset (\"ab\", \"ac\", \"\",  \"pb\", \"sac\") base_size numeric, base font size ggplot plots plot logical, TRUE returns plot, else returns data frame correlations/distances use character, \"use\" option cor function, \"\"  returns NA pairs incomplete, \"na..complete\" uses complete  observations calculate correlations; see cor details","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/identify_sensillum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify_sensillum — identify_sensillum","text":"eithe& Carolin G.(†27)r plot (gtable) responses sorted   highest correlations lowest distances, data frame containing   calculated correlations Euclidean distances","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/identify_sensillum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"identify_sensillum — identify_sensillum","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/identify_sensillum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify_sensillum — identify_sensillum","text":"","code":"# load data library(DoOR.data)  # create an example recording recording <- data.frame(    odorants = c(trans_id(c(\"BEDN\", \"ETAS\"), \"Code\"),    trans_id(\"carbon dioxide\", \"Name\")),    unit1 = c(.9,.1,.1),    unit2 = c(0, .1, 1) )  # run the identification identify_sensillum(recording) #> found correlations above 0.9 for all 2 units in: ab1  identify_sensillum(recording, method = \"dist\", nshow = 5) #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_bar()`). #> Warning: Removed 5 rows containing missing values or values outside the scale range #> (`geom_bar()`)."},{"path":"https://docs.ropensci.org/DoOR.functions/reference/import_new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import new data into DoOR — import_new_data","title":"Import new data into DoOR — import_new_data","text":"Import update new data update door_global_normalization_weights, door_response_range, odor, ORs receptor data frames.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/import_new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import new data into DoOR — import_new_data","text":"","code":"import_new_data(file.name,   dataFormat = door_default_values(\"door_data_format\"),   odor_data = door_default_values(\"odor\"),   weightGlobNorm = door_default_values(\"door_global_normalization_weights\"),   responseRange = door_default_values(\"door_response_range\"),   receptors = door_default_values(\"ORs\"),   ident = door_default_values(\"ident\"), round = 3)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/import_new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import new data into DoOR — import_new_data","text":"file.name character string, name given file contains  response values one odorant receptors, either .csv .txt  file. dataFormat data frame, data frame contain response  value odorant information. odor_data data frame, contains odorant information. weightGlobNorm data matrix, indicates whether given receptor  measured given study. responseRange data frame, contains information response  range study many odors measured study. receptors data frame, contains receptor OSN names  expression. ident identifier used matching, usually InChIKey used. round number digits imported values rounded .","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/import_new_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import new data into DoOR — import_new_data","text":"import_new_data used import new data database. data contains new receptor ORN, build new data frame receptor ORN. data contains receptor already present  database, merge imported data old data frame. information  (e.g. response range, many receptors odors measured given  study) integrated data door_response_range, odor,  ORs door_global_normalization_weights. existing study imported, remove_study run first order perform update.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/import_new_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import new data into DoOR — import_new_data","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de> Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/load2list.html","id":null,"dir":"Reference","previous_headings":"","what":"load2list — load2list","title":"load2list — load2list","text":"returns original DoOR response data list","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/load2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load2list — load2list","text":"","code":"load2list()"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/load2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load2list — load2list","text":"list","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/load2list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"load2list — load2list","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/load2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load2list — load2list","text":"","code":"# load DoOR.data library(DoOR.data) load_door_data(nointeraction = TRUE)  # write the data into a list lst <- load2list()"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/map_receptor.html","id":null,"dir":"Reference","previous_headings":"","what":"map_receptor — map_receptor","title":"map_receptor — map_receptor","text":"Identifying source unknown response data correlating agains  DoOR responding units.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/map_receptor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_receptor — map_receptor","text":"","code":"map_receptor(data,   response_matrix = door_default_values(\"door_response_matrix\"), sub,   threshold.p, threshold.cor, nshow)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/map_receptor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_receptor — map_receptor","text":"data data frame, containing two columns, one called \"odorants\" one \"responses\" providing InChIKeys odorant responses respectively. response_matrix output numeric vector contains Pearson  Correlation Coefficient given data selected consensus data sub character, subset responding units returned response matrix threshold.p numeric, p-value threshold, correlations returned threshold.cor numeric, correlation-coefficient threshold, correlations returned nshow numeric, defined, number results ","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/map_receptor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"map_receptor — map_receptor","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de> Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/map_receptor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"map_receptor — map_receptor","text":"","code":"# load data load_door_data(nointeraction = TRUE)  # pick example data data <- data.frame(odorants  = Or22a$InChIKey,                    responses = Or22a$Hallem.2004.EN) data <- na.omit(data)  # find the corresponding receptor / responding unit map_receptor(data = data) #> skipped Or22c, Or24a, Or67d, pb2A as overlap (n) was < 3 #>             responding.unit  n         cor      p.value #> Or22a                 Or22a 16  0.97330896 2.411584e-10 #> Or59c                 Or59c  9  0.88242782 1.632627e-03 #> Or9a                   Or9a 16  0.85276703 2.700050e-05 #> Or43b                 Or43b 16  0.79518371 2.313586e-04 #> Or67a                 Or67a 16  0.79176325 2.572690e-04 #> Or47a                 Or47a 16  0.72804758 1.385630e-03 #> Or2a                   Or2a 16  0.70479672 2.297156e-03 #> Or33c                 Or33c  6  0.69696356 1.238325e-01 #> Or98a                 Or98a 16  0.67425019 4.176814e-03 #> Or49a                 Or49a 14  0.66615361 9.291311e-03 #> ac1BC                 ac1BC  6  0.65659482 1.566423e-01 #> Or94b                 Or94b 14  0.63649625 1.438747e-02 #> Or19a                 Or19a 16  0.63081664 8.790115e-03 #> Or85c                 Or85c 14  0.60963985 2.063069e-02 #> Or85f                 Or85f 16  0.56826475 2.163953e-02 #> Or65a                 Or65a 16  0.55632710 2.522050e-02 #> ab5B                   ab5B 15  0.54060183 3.746370e-02 #> Or59a                 Or59a 14  0.52776838 5.241598e-02 #> Ir75d                 Ir75d  5  0.52095007 3.680658e-01 #> Or85b                 Or85b 16  0.50924681 4.392992e-02 #> Or67c                 Or67c 16  0.49794238 4.966312e-02 #> Or45a                 Or45a 14  0.49760175 7.020797e-02 #> Or85d                 Or85d  9  0.48592684 1.847643e-01 #> ab4B                   ab4B 16  0.47611524 6.228175e-02 #> Or42b                 Or42b 16  0.47398484 6.362844e-02 #> ac1B                   ac1B  8  0.46318881 2.477438e-01 #> Or22b                 Or22b 11  0.44930742 1.656274e-01 #> Or85e                 Or85e  6  0.43414674 3.896946e-01 #> ab2B                   ab2B 16  0.42262954 1.029175e-01 #> ac1                     ac1 16  0.41993818 1.053615e-01 #> Or42a                 Or42a 14  0.39804599 1.586720e-01 #> Ir64a.DC4         Ir64a.DC4  5  0.39612935 5.091526e-01 #> Or49b                 Or49b 16  0.38344243 1.426251e-01 #> Or45b                 Or45b 14  0.37128448 1.912066e-01 #> ac3B                   ac3B 14  0.36544411 1.988322e-01 #> Or85a                 Or85a 16  0.35467189 1.776836e-01 #> Or1a                   Or1a 14  0.34649440 2.248872e-01 #> Or35a                 Or35a 16  0.31753759 2.307431e-01 #> Or23a                 Or23a 16  0.30793288 2.459328e-01 #> Or13a                 Or13a 16  0.30089844 2.574429e-01 #> ac1A                   ac1A 11  0.29914593 3.715140e-01 #> Ir64a.DP1m       Ir64a.DP1m  5  0.24681292 6.889684e-01 #> Or43a                 Or43a 16  0.21957875 4.138642e-01 #> Or59b                 Or59b 16  0.20742642 4.407997e-01 #> Or33b                 Or33b 16  0.20172016 4.537477e-01 #> Or67b                 Or67b 15  0.19222954 4.924876e-01 #> Or33a                 Or33a 14  0.14653356 6.171644e-01 #> Or94a                 Or94a 14  0.11379043 6.985109e-01 #> Or92a                 Or92a 16  0.10564944 6.969726e-01 #> Or74a                 Or74a 14  0.09066206 7.579042e-01 #> ac2A                   ac2A 11  0.06892160 8.404222e-01 #> Ir75a                 Ir75a  5  0.06720159 9.145007e-01 #> Or69a                 Or69a  8  0.04747053 9.111264e-01 #> Or10a                 Or10a 16  0.01137190 9.666592e-01 #> ac2                     ac2 16 -0.00299004 9.912315e-01 #> ac3A                   ac3A 12 -0.07111781 8.261584e-01 #> ac3_noOr35a     ac3_noOr35a 16 -0.07129613 7.930252e-01 #> Or30a                 Or30a 14 -0.07501165 7.988326e-01 #> Ir92a                 Ir92a  5 -0.07827535 9.004386e-01 #> Or82a                 Or82a 16 -0.15964051 5.548075e-01 #> Or71a                 Or71a 12 -0.17163567 5.937722e-01 #> ac2B                   ac2B  8 -0.18689747 6.576423e-01 #> Or7a                   Or7a 16 -0.19461594 4.701299e-01 #> ac2BC                 ac2BC  6 -0.19862941 7.059742e-01 #> ac4                     ac4 16 -0.22286950 4.067226e-01 #> Gr21a.Gr63a     Gr21a.Gr63a 14 -0.23718054 4.142385e-01 #> Or83c                 Or83c 13 -0.23941804 4.308047e-01 #> Or88a                 Or88a 16 -0.32014767 2.267201e-01 #> Ir31a                 Ir31a  5 -0.32820037 5.897504e-01 #> Or46a                 Or46a  6 -0.62554327 1.840740e-01 #> Or47b                 Or47b 16 -0.70730528 2.180129e-03 #> Ir76a                 Ir76a  5 -0.74892420 1.452005e-01 #> Ir41a                 Ir41a  5 -0.78957881 1.121403e-01 #> Ir84a                 Ir84a  5 -0.92666215 2.357708e-02"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a model response — model_response","title":"Generates a model response — model_response","text":"Runs DoOR algorithm, merges measurements one receptor common response model.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a model response — model_response","text":"","code":"model_response(da, select.MDValue = door_default_values(\"select.MDValue\"),   overlapValues = door_default_values(\"overlapValues\"),   responseRange = door_default_values(\"door_response_range\"),   weightGlobNorm = door_default_values(\"door_global_normalization_weights\"),   glob.normalization = door_default_values(\"glob.normalization\"),   plot = door_default_values(\"plot\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a model response — model_response","text":"da data frame, selected receptor containing measured responses studies. select.MDValue numeric, threshold MD rejecting fit. overlapValues numeric, criterion using refuse data set enough overlap value. responseRange data frame, contains response ranges studies. weightGlobNorm data frame, binary data matrix, 1 indicates given odor measured given study, NA indicates . glob.normalization logical, default TRUE, performs global normalization model response. Otherwise (FALSE) response values given value 0 1. plot logical, FALSE, plotting suppressed. Default FALSE.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a model response — model_response","text":"Merging data processed following: Normalize response data value [0,1]. Compute correlation studies selected best pair using select_model. Merge first pair using function project_points. Add datasets correlation growing model response new dataset correlation threshold (select.MDValue). Datasets excluded based criterion appended separate list.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generates a model response — model_response","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a model response — model_response","text":"","code":"# load data library(DoOR.data) data(Or35a) data(door_global_normalization_weights) data(door_response_range)  # merge all existing data sets for Or35a into a consensus model response model_response_Or35a <- model_response(Or35a, plot = TRUE) #> da: REMOVED Montague.2011.EN as overlap with all other studies was smaller than 5!"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"model_response_seq — model_response_seq","title":"model_response_seq — model_response_seq","text":"generates model response merge data given sequence","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model_response_seq — model_response_seq","text":"","code":"model_response_seq(data, SEQ,   overlapValues = door_default_values(\"overlapValues\"),   select.MDValue = door_default_values(\"select.MDValue\"), strict = TRUE,   plot = FALSE)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"model_response_seq — model_response_seq","text":"data data frame, odorant response data, e.g. Or22a. SEQ character vector, containing names studies indicating given sequence merging data. overlapValues minimum overlap studies perfom merge select.MDValue minimum mean distance studies perfom merge strict logical, TRUE merging permutation stopped single merge mean distance select.MDValue plot logical","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"model_response_seq — model_response_seq","text":"# model_response_seq.R: ################# # merges studies given sequence (determined user exhaustive enumeration choosing optimal sequence) # input parameters: #################### # data  : data frame, odorant response data given receptor, e.g. Or22a # SEQ \t: character vector, contains names studies measured receptor specific order (merging sequence) # output numeric vector: response values","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response_seq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"model_response_seq — model_response_seq","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/model_response_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"model_response_seq — model_response_seq","text":"","code":"# load data library(DoOR.data) data(Or35a) data(door_response_range)  # specify a sequence of merging SEQ <- c(\"Hallem.2006.EN\",\"Kreher.2008.EN\",\"Hallem.2006.EN\")  # perform the merging selected_merg <- model_response_seq(Or35a, SEQ = SEQ, plot = TRUE) #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0 #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0 #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0 #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/private_odorant.html","id":null,"dir":"Reference","previous_headings":"","what":"private_odorant — private_odorant","title":"private_odorant — private_odorant","text":"return odorant activates receptor interest exclusively","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/private_odorant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"private_odorant — private_odorant","text":"","code":"private_odorant(receptor, sensillum = FALSE,   response_matrix = door_default_values(\"door_response_matrix\"),   door_mappings = door_default_values(\"door_mappings\"),   zero = door_default_values(\"zero\"), nshow = 5, tag)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/private_odorant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"private_odorant — private_odorant","text":"receptor character, name DoOR responding unit (one ORs$) sensillum logical, restrict search sensillum receptor expressed ? response_matrix DoOR response matrix, input data perform search door_mappings data frame containing mapping information zero character, odorant set 0 nshow numeric, number private odorants return tag character, chemical identifier give odorant names (colnames(odor))","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/private_odorant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"private_odorant — private_odorant","text":"data.frame containing odorants response receptor   interest well maximum response remaining receptors   difference","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/private_odorant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"private_odorant — private_odorant","text":"","code":"# load data library(DoOR.data)  # find a private odorant for Gr21a.Gr63a (the carbon dioxide receptor) # private_odorant(\"Gr21a.Gr63a\", tag = \"Name\")  # now find an odorant that within the ab3 sensillum specifically activates # Or22a private_odorant(\"Or22a\", tag = \"Name\", sensillum = TRUE) #>  #> >> Checking only against the ab3 sensillum (Or22a, Or22b, Or85b) << #>                             Or22a max.others n difference #> ethyl hexanoate         0.7819367 0.23844314 1  0.5434936 #> ethyl 2-methylbutanoate 0.5368363 0.03107633 1  0.5057599 #> diethyl succinate       0.4659812 0.05652431 1  0.4094569 #> methyl octanoate        0.5249299 0.14747177 1  0.3774581 #> E2-hexenyl acetate      0.4271672 0.05042492 1  0.3767423"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/project_points.html","id":null,"dir":"Reference","previous_headings":"","what":"project_points — project_points","title":"project_points — project_points","text":"projects data points onto curve defined model function","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/project_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"project_points — project_points","text":"","code":"project_points(x, y, xylim, best.model, plot = door_default_values(\"plot\"),   points_cex = door_default_values(\"points.cex\"),   title = door_default_values(\"title\"), ...)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/project_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"project_points — project_points","text":"x, y numeric vectors data values, coordinate vectors points plot, coordinates can contain NA values. xylim numeric vectors, x, y limits plot. best.model list, containing parameters, function, inverse function, Leibniz's notation distance calculation MD value. missing, best model generated automatically. plot logical, FALSE, plotting suppressed. Default FALSE. points_cex numerical value, giving magnification level symbols relative default size. title logical, TRUE, title shown. Default FALSE. ... graphical parameters","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/project_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"project_points — project_points","text":"internal use merging process (see also model_response). model function choosen calculate_model. project_points projects data points datasets merged onto curve defined model function. computes closest distance data point point curve numerical optimisation. list two data frames \"double.observations\" \"single.observations\" returned, give coordinates double observations (defined (x,y)) coordinates single observation (defined (x,NA) (NA,y)). data frames contain seven columns: \"ID\" indicating original position data x y, \"x\", \"y\" indicating coordinate observation, \"X\", \"Y\" indicating coordinate projected point function, \"distance\" indicating distances (xmin, f(xmin)) points functional line, \"NDR\" indicating normalized distances across distance values.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/project_points.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"project_points — project_points","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/project_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"project_points — project_points","text":"","code":"# load data library(DoOR.data) data(Or23a)  # normalize two example data sets x <- door_norm(Or23a[,'Hallem.2004.EN']) y <- door_norm(Or23a[,'Hallem.2006.EN'])  # find the best fitting function and project the remaining points (measured # only in one of the data sets) onto the fit. project_points(x = x, y = y, plot = TRUE) #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0 #> Warning: selfStart initializing functions should have a final '...' argument since R 4.1.0  #> $double.observations #>     ID         x          y          X         Y  distance        NDR #> 1   12 0.2813578 0.25609756 0.28016263 0.2589097 0.3494159 0.22982954 #> 2   44 0.1529174 0.15853659 0.13515401 0.1835676 0.1856692 0.12212459 #> 3   74 1.0000000 0.65853659 0.95905910 0.6670303 1.1793320 0.77570974 #> 4   75 0.2844037 0.32926829 0.30747857 0.2698300 0.3788343 0.24917955 #> 5   86 0.8318165 0.41463415 0.80484163 0.4607232 0.9122529 0.60003755 #> 6   88 0.4250826 0.29268293 0.41906223 0.3102241 0.4975126 0.32724067 #> 7   99 0.1315046 0.09756098 0.08980186 0.1392637 0.1394340 0.09171317 #> 8  137 0.8868624 0.73170732 0.96714215 0.7231841 1.2360854 0.81303949 #> 9  144 0.4495413 0.34146341 0.45586507 0.3227436 0.5363867 0.35281021 #> 10 164 0.1498532 0.13414634 0.11726885 0.1667307 0.1669345 0.10980176 #> 11 167 0.6727890 0.35365854 0.65775728 0.3931752 0.7502270 0.49346442 #> 12 173 0.2813578 0.29268293 0.29277092 0.2640223 0.3630214 0.23877859 #>  #> $single.observations #>      ID         x          y             X          Y   distance        NDR #> 13   93 0.8195780         NA  0.8195779817 0.46962011 0.92946748 0.61136047 #> 14  151 0.6238532         NA  0.6238532110 0.38051628 0.71403638 0.46965992 #> 15  221 0.0000000         NA  0.0000000000 0.04946184 0.04952231 0.03257347 #> 16  225 0.1070459         NA  0.1070458716 0.15650771 0.15669904 0.10306934 #> 17    1        NA 0.10975610  0.0602942544 0.10975610 0.10989027 0.07228071 #> 18    3        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 19    4        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 20    5        NA 0.02439024 -0.0250715993 0.02439024 0.02442006 0.01606238 #> 21   11        NA 0.15853659  0.1090747422 0.15853659 0.15873039 0.10440547 #> 22   13        NA 0.14634146  0.0968796202 0.14634146 0.14652036 0.09637428 #> 23   14        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 24   15        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 25   16        NA 0.01219512 -0.0372667212 0.01219512 0.01221003 0.00803119 #> 26   17        NA 0.09756098  0.0480991324 0.09756098 0.09768024 0.06424952 #> 27   18        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 28   19        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 29   20        NA 0.13414634  0.0846844983 0.13414634 0.13431033 0.08834309 #> 30   21        NA 0.14634146  0.0968796202 0.14634146 0.14652036 0.09637428 #> 31   22        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 32   23        NA 0.13414634  0.0846844983 0.13414634 0.13431033 0.08834309 #> 33   24        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 34   25        NA 0.17073171  0.1212698641 0.17073171 0.17094043 0.11243666 #> 35   26        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 36   27        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 37   28        NA 0.09756098  0.0480991324 0.09756098 0.09768024 0.06424952 #> 38   29        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 39   30        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 40   31        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 41   32        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 42   35        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 43   36        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 44   37        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 45   38        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 46   39        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 47   40        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 48   41        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 49   42        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 50   43        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 51   45        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 52   46        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 53   47        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 54   48        NA 0.14634146  0.0968796202 0.14634146 0.14652036 0.09637428 #> 55   49        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 56   50        NA 0.20731707  0.1725070152 0.20731707 0.22994795 0.15124906 #> 57   69        NA 0.24390244  0.2450945279 0.24390244 0.31127012 0.20473900 #> 58   70        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 59   71        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 60   72        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 61   73        NA 0.26829268  0.3035465531 0.26829268 0.37461239 0.24640261 #> 62   76        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 63   83        NA 0.02439024 -0.0250715993 0.02439024 0.02442006 0.01606238 #> 64   84        NA 0.14634146  0.0968796202 0.14634146 0.14652036 0.09637428 #> 65   85        NA 0.26829268  0.3035465531 0.26829268 0.37461239 0.24640261 #> 66   87        NA 0.45121951  0.7879112845 0.45121951 0.89283678 0.58726650 #> 67   97        NA 0.08536585  0.0359040105 0.08536585 0.08547021 0.05621833 #> 68   98        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 69  100        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 70  101        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 71  102        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 72  103        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 73  104        NA 0.12195122  0.0724893763 0.12195122 0.12210030 0.08031190 #> 74  105        NA 0.03658537 -0.0128764773 0.03658537 0.03663009 0.02409357 #> 75  106        NA 0.09756098  0.0480991324 0.09756098 0.09768024 0.06424952 #> 76  107        NA 0.01219512 -0.0372667212 0.01219512 0.01221003 0.00803119 #> 77  108        NA 0.00000000 -0.0494618432 0.00000000 0.00000000 0.00000000 #> 78  109        NA 0.12195122  0.0724893763 0.12195122 0.12210030 0.08031190 #> 79  132        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 80  133        NA 0.18292683  0.1342471993 0.18292683 0.18455888 0.12139425 #> 81  134        NA 0.17073171  0.1212698641 0.17073171 0.17094043 0.11243666 #> 82  135        NA 0.60975610  0.9429991368 0.60975610 1.11977579 0.73653642 #> 83  136        NA 1.00000000  1.2362539878 1.00000000 1.52032643 1.00000000 #> 84  138        NA 0.12195122  0.0724893763 0.12195122 0.12210030 0.08031190 #> 85  140        NA 0.60975610  0.9429991368 0.60975610 1.11977579 0.73653642 #> 86  141        NA 0.51219512  0.8762870170 0.51219512 1.00048037 0.65806944 #> 87  142        NA 0.41463415  0.7110652437 0.41463415 0.80769522 0.53126434 #> 88  143        NA 0.46341463  0.8094119203 0.46341463 0.91755686 0.60352622 #> 89  145        NA 0.60975610  0.9429991368 0.60975610 1.11977579 0.73653642 #> 90  146        NA 0.78048780  1.0167417927 0.78048780 1.29477128 0.85164031 #> 91  147        NA 0.59756098  0.9379893756 0.59756098 1.10659047 0.72786373 #> 92  148        NA 0.54878049  0.9095724346 0.54878049 1.05001155 0.69064875 #> 93  149        NA 0.02439024 -0.0250715993 0.02439024 0.02442006 0.01606238 #> 94  150        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 95  163        NA 0.13414634  0.0846844983 0.13414634 0.13431033 0.08834309 #> 96  165        NA 0.25609756  0.2733675169 0.25609756 0.34206190 0.22499240 #> 97  166        NA 0.46341463  0.8094119203 0.46341463 0.91755686 0.60352622 #> 98  168        NA 0.13414634  0.0846844983 0.13414634 0.13431033 0.08834309 #> 99  169        NA 0.21951220  0.1946379424 0.21951220 0.25521810 0.16787059 #> 100 170        NA 0.36585366  0.5827436284 0.36585366 0.67038986 0.44095126 #> 101 171        NA 0.15853659  0.1090747422 0.15853659 0.15873039 0.10440547 #> 102 172        NA 0.13414634  0.0846844983 0.13414634 0.13431033 0.08834309 #> 103 174        NA 0.12195122  0.0724893763 0.12195122 0.12210030 0.08031190 #> 104 175        NA 0.52439024  0.8887738352 0.52439024 1.01793698 0.66955159 #> 105 176        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 106 177        NA 0.04878049 -0.0006813554 0.04878049 0.04884012 0.03212476 #> 107 178        NA 0.21951220  0.1946379424 0.21951220 0.25521810 0.16787059 #> 108 179        NA 0.26829268  0.3035465531 0.26829268 0.37461239 0.24640261 #> 109 180        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 110 181        NA 0.07317073  0.0237088885 0.07317073 0.07326018 0.04818714 #> 111 182        NA 0.06097561  0.0115137666 0.06097561 0.06105015 0.04015595 #> 112 183        NA 0.09756098  0.0480991324 0.09756098 0.09768024 0.06424952 #> 113 184        NA 0.21951220  0.1946379424 0.21951220 0.25521810 0.16787059 #> 114 185        NA 0.24390244  0.2450945279 0.24390244 0.31127012 0.20473900 #> 115 186        NA 0.42682927  0.7387264840 0.42682927 0.83792633 0.55114896 #>  #> $MD #> [1] 0.04082858 #>"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/remove_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a study from DoOR — remove_study","title":"Remove a study from DoOR — remove_study","text":"Use function remove study DoOR database. import_new_data.R uses function detects existing study import process (e.g. imported updated data).","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/remove_study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a study from DoOR — remove_study","text":"","code":"remove_study(study, receptors = door_default_values(\"ORs\"),   responseRange = door_default_values(\"door_response_range\"),   weightGlobNorm = door_default_values(\"door_global_normalization_weights\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/remove_study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a study from DoOR — remove_study","text":"study string containing name study want remove (e.g. 'Bruyne.2001.WT') receptors vector receptors checked. Defaults receptors exidting DoOR. responseRange dataframe containing info response ranges studies (door_response_range) weightGlobNorm dataframe containing info relative weights receptors (door_global_normalization_weights)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/remove_study.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove a study from DoOR — remove_study","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/remove_study.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a study from DoOR — remove_study","text":"","code":"# load data library(DoOR.data) load_door_data(nointeraction = TRUE)  # remove Bruyne.2001.WT from DoOR remove_study('Bruyne.2001.WT') #> removed Bruyne.2001.WT from Or7a . #> removed Bruyne.2001.WT from Or10a . #> removed Bruyne.2001.WT from Or13a . #> removed Bruyne.2001.WT from Or22a . #> removed Bruyne.2001.WT from Or42b . #> removed Bruyne.2001.WT from Or49b . #> removed Bruyne.2001.WT from Or59b . #> removed Bruyne.2001.WT from Or67c . #> removed Bruyne.2001.WT from Or82a . #> removed Bruyne.2001.WT from Or85b . #> removed Bruyne.2001.WT from Or92a . #> removed Bruyne.2001.WT from Or98a . #> removed Bruyne.2001.WT from Gr21a.Gr63a . #> removed Bruyne.2001.WT from ab2B . #> removed Bruyne.2001.WT from ab4B . #> removed Bruyne.2001.WT from ab5B . #> removed Bruyne.2001.WT from 'door_response_range' #> removed Bruyne.2001.WT from 'door_global_normalization_weights'"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/reset_sfr.html","id":null,"dir":"Reference","previous_headings":"","what":"reset SFR — reset_sfr","title":"reset SFR — reset_sfr","text":"function reseting SFR zero","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/reset_sfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reset SFR — reset_sfr","text":"","code":"reset_sfr(x, sfr)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/reset_sfr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reset SFR — reset_sfr","text":"x numeric DoOR response matrix, input values sfr numeric character, either value subtract x vector InChIKey x DoOR response matrix","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/reset_sfr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"reset SFR — reset_sfr","text":"Performs simple subtraction SFR value.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/reset_sfr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"reset SFR — reset_sfr","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/reset_sfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reset SFR — reset_sfr","text":"","code":"# load data library(DoOR.data) data(door_response_matrix)  # create a response matrix with the SFR reset to 0 door_response_matrix_SFRreset <- reset_sfr(door_response_matrix, \"SFR\")"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/select_model.html","id":null,"dir":"Reference","previous_headings":"","what":"compute the data pairwise and and selects a pair with the lowest ","title":"compute the data pairwise and and selects a pair with the lowest ","text":"compute data pairwise using function calculate_model selects pair lowest \"MD\" value.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/select_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute the data pairwise and and selects a pair with the lowest ","text":"","code":"select_model(candidate, data_candidate, merged_data,   overlapValues = door_default_values(\"overlapValues\"),   merged = door_default_values(\"merged\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/select_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute the data pairwise and and selects a pair with the lowest ","text":"candidate character vector, contains names studies. data_candidate data frame, odorant response data contains value columns. merged_data numeric vector, merged data overlapValues numeric, criterion using refuse data set enough overlap value. merged logical, merged TRUE, calculate models merged_data candidate data. FALSE, calculate models candidates.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/select_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"compute the data pairwise and and selects a pair with the lowest ","text":"function used model_response select first pair next data set merging. output list containing \"selected.x\" \"selected.y\" specify data plots another, \"best.model\" used function project_points.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/select_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"compute the data pairwise and and selects a pair with the lowest ","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/select_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"compute the data pairwise and and selects a pair with the lowest ","text":"","code":"# load data library(DoOR.data) data(ac3B)  # split into data and header studies <- names(ac3B)[c(7:8)] data_candidate <- ac3B[,c(7:8)]  # rescale data norm_data_candidate <- apply(data_candidate, 2, door_norm)  # find the best fitting model select_model(candidate = studies, data_candidate = norm_data_candidate,              merged = FALSE) #> $best.model #> $best.model$initial #> $best.model$initial$model.name #> [1] \"no.fitted.model\" #>  #> $best.model$initial$cal.parameters #> [1] NA #>  #> $best.model$initial$MD #> [1] 0.1415 #>  #>  #>  #> $selected.x #> character(0) #>  #> $selected.y #> character(0) #>"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the sparseness of a vector. — sparse","title":"Calculate the sparseness of a vector. — sparse","text":"Sparseness can calculated lifetime kurtosis (LTK, Willmore Tolhurst, 2001) lifetime sparseness (LTS, Bhandawat et al., 2007).","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the sparseness of a vector. — sparse","text":"","code":"sparse(x, method = \"ltk\")"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the sparseness of a vector. — sparse","text":"x numerical input vector method type sparseness measure, either 'ltk' lifetime kurtosis 'lts' lifetime sparseness (see references).","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/sparse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the sparseness of a vector. — sparse","text":"LTS scales \\[0,1\\] LTK restricted. LTS   takes positive values.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/sparse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the sparseness of a vector. — sparse","text":"Bhandawat, V., Olsen, S.R., Gouwens, N.W., Schlief, M.L., Wilson,   R.., 2007. Sensory processing Drosophila antennal lobe increases   reliability separability ensemble odor representations. Nature   neuroscience 10, 1474–82. doi:10.1038/nn1976 Willmore, B., Tolhurst, D.J., 2001. Characterizing sparseness   neural codes. Network 12, 255–270. doi:10.1080/net.12.3.255.270","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/sparse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the sparseness of a vector. — sparse","text":"Daniel Münch <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/trans_id.html","id":null,"dir":"Reference","previous_headings":"","what":"trans_id — trans_id","title":"trans_id — trans_id","text":"Translate chemical identifiers one .","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/trans_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trans_id — trans_id","text":"","code":"trans_id(x, from = \"CAS\", to = \"InChIKey\",   odor_data = door_default_values(\"odor\"))"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/trans_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trans_id — trans_id","text":"x character vector, one many chemical identifiers character, type identifier translate (one column names ``odor``) character, type identifier translate (one column names ``odor``) odor_data data frame containing odor information (defaults ``odor``).","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/trans_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"trans_id — trans_id","text":"character vector translated chemical identifiers","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/trans_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"trans_id — trans_id","text":"","code":"# load data library(DoOR.data)  # transform CAS to InChIKey trans_id(\"123-92-2\") #> [1] \"MLFHJEHSLIIPHL-UHFFFAOYSA-N\"  # transform Name to InChIKey trans_id(\"isopentyl acetate\", \"Name\") #> [1] \"MLFHJEHSLIIPHL-UHFFFAOYSA-N\"  # transform SMILE to InChIKey trans_id(\"C(C(C)C)COC(=O)C\", \"SMILES\", \"Name\") #> [1] \"isopentyl acetate\""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_database.html","id":null,"dir":"Reference","previous_headings":"","what":"update response matrix — update_door_database","title":"update response matrix — update_door_database","text":"update globally response matrix unglobally normalized  response matrix door_response_matrix_non_normalized introducing new consensus response data given receptor.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update response matrix — update_door_database","text":"","code":"update_door_database(receptor, permutation = TRUE, perm,   response_matrix_nn = door_default_values(\"door_response_matrix_non_normalized\"),   response_matrix = door_default_values(\"door_response_matrix\"),   responseRange = door_default_values(\"door_response_range\"),   weightGlobNorm = door_default_values(\"door_global_normalization_weights\"),   select.MDValue = door_default_values(\"select.MDValue\"), strict = TRUE,   overlapValues = door_default_values(\"overlapValues\"),   door_excluded_data = door_default_values(\"door_excluded_data\"),   plot = FALSE)"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update response matrix — update_door_database","text":"receptor character string, name given odorant receptor. permutation logical, TRUE, sequence chosen permutation, FALSE, sequence chosen routine process. perm matrix one sequence study names per row, empty,  possible permutations study names provided. response_matrix_nn data frame, response data  globally normalized. response_matrix data frame, globally normalized response data. responseRange data frame, response range studies. weightGlobNorm data frame, weight matrix global normalization. select.MDValue minimum mean distance studies perfom  merge (used permutation == FALSE permutation == TRUE strict == TRUE) strict logical, TRUE merging permutation stopped  single merge mean distance select.MDValue (valid  permutation == TRUE) overlapValues minimum overlap studies perfom merge door_excluded_data data frame contains list excluded data sets. plot logical","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_database.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"update response matrix — update_door_database","text":"merging sequence arranged routine process (using  model_response taking optimized sequence chosen permutations. mean correlation merged responses original recording computed permutation, optimozed sequence highest correlation.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_database.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"update response matrix — update_door_database","text":"Shouwen Ma <shouwen.ma@uni-konstanz.de> Shouwen Ma <daniel.muench@uni-konstanz.de>","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"update response matrix — update_door_database","text":"","code":"if (FALSE) { # load data library(DoOR.data) load_door_data() # update the entry \"Or67b\" of data \"door_response_matrix\" and # \"door_response_matrix_non_normalized\" with permutations.  update_door_database(receptor=\"Or67b\", permutation = TRUE) }"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_odorinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"update_door_odorinfo — update_door_odorinfo","title":"update_door_odorinfo — update_door_odorinfo","text":"Update DoOR odor data info odor. function work, DoOR data loaded current environment.","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_odorinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update_door_odorinfo — update_door_odorinfo","text":"","code":"update_door_odorinfo()"},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_odorinfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"update_door_odorinfo — update_door_odorinfo","text":"Daniel Münch, daniel@muench.bio","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/reference/update_door_odorinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"update_door_odorinfo — update_door_odorinfo","text":"","code":"# load data load_door_data(nointeraction = TRUE)   # modify odor odor[1,1] <- \"acid\"  # run  update_door_odorinfo()  # check that data sets have been updated head(Or22a) #>   Class               Name                    InChIKey   CID       CAS #> 1  <NA>                sfr                         SFR   SFR       SFR #> 2 other              water XLYOFNOQVPJJNP-UHFFFAOYSA-N   962 7732-18-5 #> 3 amine ammonium hydroxide VHUUQVKOLVNVRT-UHFFFAOYSA-N 14923 1336-21-6 #> 4 amine         putrescine KIDHWZJUCRJVML-UHFFFAOYSA-N  1045  110-60-1 #> 5 amine         cadaverine VHRGRCVQAFMJIZ-UHFFFAOYSA-N   273  462-94-2 #> 6 amine            ammonia QGZKDVFQNNGYKY-UHFFFAOYSA-N   222 7664-41-7 #>   Hallem.2006.EN Dobritsa.2003.EN Stensmyr.2003.WT Schmuker.2007.TR #> 1              4               NA               NA                4 #> 2             NA               NA               NA               NA #> 3             17               NA               NA               NA #> 4             16               NA               NA                3 #> 5             17               NA               NA               NA #> 6             NA               NA               NA                3 #>   Pelz.2006.ALEC50 Pelz.2006.AntEC50 Pelz.2005.ALnmr Pelz.2005.Antnmr #> 1               NA                NA               0                0 #> 2               NA                NA              NA               NA #> 3               NA                NA              NA               NA #> 4               NA                NA              NA               NA #> 5               NA                NA              NA               NA #> 6               NA                NA              NA               NA #>   Gabler.2013.AL Bruyne.2001.WT Bruyne.2010.WT Marshall.2010.WT Hallem.2004.EN #> 1              0              4              0            0.000          6.186 #> 2             NA             NA             NA           60.571             NA #> 3             NA             NA             NA           44.286             NA #> 4             NA             NA             NA           28.000             NA #> 5             NA             NA             NA               NA             NA #> 6             NA             NA             NA               NA             NA #>   Hallem.2004.WT #> 1          6.915 #> 2             NA #> 3             NA #> 4             NA #> 5             NA #> 6             NA"},{"path":"https://docs.ropensci.org/DoOR.functions/news/index.html","id":"doorfunctions-v201","dir":"Changelog","previous_headings":"","what":"DoOR.functions v2.0.1","title":"DoOR.functions v2.0.1","text":"added unit testing","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/news/index.html","id":"doorfunctions-v201-1","dir":"Changelog","previous_headings":"","what":"DoOR.functions v2.0.1","title":"DoOR.functions v2.0.1","text":"converted function names camelCase snake_case inform new function names upon package loading added warning message data loaded current workspace forced user feedback (#17)","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/news/index.html","id":"doorfunctions-v200","dir":"Changelog","previous_headings":"","what":"DoOR.functions v2.0.0","title":"DoOR.functions v2.0.0","text":"comprehensive update data functions DoOR project. Please see publication details: http://doi.org/10.1038/srep21841 rewrote many DoOR’s core functions improve speed readability updated documentation introduced InChIKeys main chemical identifier added several new functions analysis plotting added vignettes","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/news/index.html","id":"bugfixes-2-0-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"DoOR.functions v2.0.0","text":"updateDatabase() calculates wrong permutation (#2) calModel\\(\\) fails studies containing 0s (#1)","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/news/index.html","id":"doorfunctions-v102","dir":"Changelog","previous_headings":"","what":"DoOR.functions v1.0.2","title":"DoOR.functions v1.0.2","text":"several bugfixes","code":""},{"path":"https://docs.ropensci.org/DoOR.functions/news/index.html","id":"doorfunctions-v10","dir":"Changelog","previous_headings":"","what":"DoOR.functions v1.0","title":"DoOR.functions v1.0","text":"initial release published : Integrating heterogeneous odor response data common response model: DoOR complete olfactome. ChemSenses 35, 551–63. http://doi.org/10.1093/chemse/bjq042","code":""}]
